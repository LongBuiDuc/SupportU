FORMAT: 1A
HOST: https://polls.apiblueprint.org/

# SuportU
This is document for SuportU 's REST API. All responses from and to the API will be in JSON format.

#General Request Response
Almost APIs requires a request with application/json content type (except API for upload file, image).

#Authentication
API use JWT to authenticate user. Exactly we used JWT Bearer Authentication.
Almost APIs requires authentication on header with Authorization tag and value formatted:

Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRw319.sSaOosOuPWvTYVL

#Error
We must catch common errors in all API to ensure our application works properly.

        {
            "code":"DB_ERROR",
            "message":"Cannot create new user!"
        }

|         HTTP CODE         |       Error code        |  Error message               |
|---------------------------|-------------------------|------------------------------|
|           401             |     unauthorized        |    Authen fail               |

## Group General
Get general infomations.        
### Check Update Version [POST /api/app/version]
Check update verison, if current version is less than force version update, return true.
Not need authentication

+ Request (application/json)

        {
            "os": "android",
            "currentVersion": "1.0.1"
        }
    
+ Response 200 (application/json)

        {
            "update": true,
            "version":"1.0.3",
        }
        
+ Response 400 (application/json)

        {
            "code":"VERSION_WRONG",
            "message":"Can't compare version to check update",
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"DB_ERROR",
            "message":"Cannot execute query!",
        }

## Group Authentication
### SignIn [POST /api/authorization/signin]
User login

+ Request (application/json)

        {
            "email": "duclongbuivn@gmail.com",
            "password": "123456"
        }

+ Response 200 (application/json)

        {
            "user":
            {
                "id": 1,
                "name": "Bui Duc Long",
                "email":"duclongbuivn@gmail.com",
                "password": "123456",
                "phone": "56465465",
                "gender": "male",
                "hobbies": "Run",
                "createdDate": "2020-07-30T12:32:27",
                "updateDate": "null"
            },
            "token": "iofgnojsmopdd[spifjdwfgl;ew;d,sa,;cjkposawekdfj"
        }
        
+ Response 400 (application/json)

        {
            "code":"EMAIL_EXISTED",
            "message":"The email already exist!"
        }

        {  
            "code":"EMAIL_NOT_FOUND_ERROR",
            "message":"Email Not Found!"
        }
        
        {  
            "code":"PASSWORD_WRONG",
            "message":"Password is wrong!"
        }
        
        {  
            "code":"USER_STATUS_INVALID",
            "message":"User Status is invalid!"
        }
        
        {  
            "code":"USER_STATUS_NOT_ACTIVE",
            "message":"User Status is not active!"
        }
        
        {  
            "code":"USER_STATUS_BLOCK",
            "message":"User Status is blocked or terminated!!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Database Error or some exceptions on Server!",
        }
        
### SignUp [POST /api/authorization/signup]
User signup

+ Request (application/json)

        {
            "email": "registermail@gmail.com",
            "password": "123456",
            "name": "ofdspf",
            "phone": "0847924830",
            "gender": "male",
            "identity": "Student",
            "degree": "Bachelor",
            "schoolId": 37,
            "idNumber": 1,
            "nationality": "Republic of Korea",
            "department": "The national language",
            "motherTongue": "Korean",
            "address": "Sejong Road",
            "detailAddress": "000 Sejong Road, Junggu, Seoul",
            "schoolEmail": "university@email.net",
            "fcmToken": "c1TDG0TvRXmkeAOy1VEJ8y:APA91bGkQo5Y7ttdDXwmKsVmq1Wbpxrwc9X_ub1QJKQ2Z7Mc2bQH0dG-hlvqdXCFUJdTk6DBBXhqCd35Pr2X-8WUSnbji4fMu_Ir0dBTs4C6EKkIzw8CBaUgfqgP63b8tkJZUzfE0RF7"
        }

+ Response 200 (application/json)

        {
                "user": {
                "id": 162,
                "email": "registermail444@gmail.com",
                "password": "123456",
                "name": "pro",
                "avatar": null,
                "phone": "084792486722",
                "gender": "male",
                "identity": "PROFESSOR",
                "degree": "PRO",
                "school": {
                    "id": 37,
                    "name": "PD",
                    "createdDate": "2020-10-09T00:16:17",
                    "updateDate": "2020-10-09T00:16:17"
                },
                "idNumber": "20201002",
                "address": "Sejong Road",
                "detailAddress": "000 Sejong Road, Junggu, Seoul",
                "schoolEmail": "university@email.net",
                "department": "The national language",
                "nationality": "Republic of Korea",
                "motherTongue": "Korean",
                "consultation": "fsdffs",
                "status": "ACTIVE",
                "join": "APP",
                "fcmToken": "c1TDG0TvRXmkeAOy1VEJ8y:APA91bGkQo5Y7ttdDXwmKsVmq1Wbpxrwc9X_ub1QJKQ2Z7Mc2bQH0dG-hlvqdXCFUJdTk6DBBXhqCd35Pr2X-8WUSnbji4fMu_Ir0dBTs4C6EKkIzw8CBaUgfqgP63b8tkJZUzfE0RF7",
                "createdDate": "2020-10-09T08:28:11",
                "updateDate": "2020-10-09T08:28:11"
            },
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcy9uYW1laWRlbnRpZmllciI6WyIxNjIiLCJwcm8iLCJyZWdpc3Rlcm1haWw0NDRAZ21haWwuY29tIl0sImlzcyI6Imh0dHBzOi8vbG9jYWxob3N0OjQ0MzY5LyIsImF1ZCI6Imh0dHBzOi8vbG9jYWxob3N0OjQ0MzM2LyJ9.2zZxbkz_JKQ59it0sCTild9H70BKgkwoBKA9oxYRj_E"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"DB_ERROR",
            "message":"Cannot execute query!",
        }
        
### Forgot Email [POST /api/authorization/forgotemail]
Forgot email.

+ Request (application/json)

        {
            "name": "duclong",
            "phone": "083243315",
        }
    
+ Response 200 (application/json)

        {
            "email":"duclongbuivn@gmail.com"
        }
        
+ Response 400 (application/json)

        
        {
          "code": "PHONENUMBER_NOT_FOUND_ERROR",
          "message": "Phone numeber Not Found!"
        }
        
        {
          "code": "USER_NAME_NOT_FOUND_ERROR",
          "message": "User name Not Found!"
        }
        
+ Response 500 (application/json)

        {
          "code": "INTERNAL_SERVER_ERROR",
          "message": "error message"
        }

        
### Forgot Password [POST /api/authorization/forgotpassword]
Forgot password.

+ Request (application/json)

        {
            "name": "duclong",
            "email": "duclongbuivn@gmail.com",
        }
    
+ Response 200 (application/json)

        {
            "code":"PASSWORD_WILL_SENT",
            "message":"Password will be sent to the email registration!"
        }
        
+ Response 400 (application/json)

        
        {
          "code": "PHONENUMBER_NOT_FOUND_ERROR",
          "message": "Phone numeber Not Found!"
        }
        
        {
          "code": "USER_NAME_NOT_FOUND_ERROR",
          "message": "User name Not Found!"
        }
        
+ Response 500 (application/json)

        {
          "code": "INTERNAL_SERVER_ERROR",
          "message": "error message"
        }
        
### Logout [POST /api/authorization/logout]
Logout
    
+ Response 200 (application/json)

        {
            "code": "LOGOUT",
            "message": "Logout successful"
        }
        
+ Response 500 (application/json)

        {
          "code": "INTERNAL_SERVER_ERROR",
          "message": "error message"
        }
        
## Group Users
### Get My Profile [GET /api/users/myprofile]
Get my profile.

+ Response 200 (application/json)

        {
            "id": 47,
            "email": "registermail@gmail.com",
            "password": "123456",
            "name": "user 14",
            "avatar": null,
            "phone": "0847924833",
            "gender": "male",
            "identity": "STUDENT",
            "degree": "Bachelor",
            "school": {
                "id": 8,
                "name": "Yankee University",
                "createdDate": "2020-08-18T19:50:43",
                "updateDate": "2020-08-18T19:50:43"
            },
            "idNumber": 1,
            "address": "Sejong Road",
            "detailAddress": "000 Sejong Road, Junggu, Seoul",
            "schoolEmail": "university@email.net",
            "department": "The national language",
            "nationality": "Republic of Korea",
            "motherTongue": "Korean",
            "consultation": "bvc",
            "createdDate": "2020-07-15T02:03:18",
            "updateDate": "2020-08-13T02:17:56",
            "fcmToken": "c1TDG0TvRXmkeAOy1VEJ8y:APA91bGkQo5Y7ttdDXwmKsVmq1Wbpxrwc9X_ub1QJKQ2Z7Mc2bQH0dG-hlvqdXCFUJdTk6DBBXhqCd35Pr2X-8WUSnbji4fMu_Ir0dBTs4C6EKkIzw8CBaUgfqgP63b8tkJZUzfE0RF7"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get User Profile [GET /api/users/information/{userId}]
Get user profile.

+ Response 200 (application/json)

        {
            "id": 47,
            "email": "registermail@gmail.com",
            "password": "123456",
            "name": "user 14",
            "avatar": null,
            "phone": "0847924833",
            "gender": "male",
            "identity": "STUDENT",
            "degree": "Bachelor",
            "school": {
                "id": 8,
                "name": "Yankee University",
                "createdDate": "2020-08-18T19:50:43",
                "updateDate": "2020-08-18T19:50:43"
            },
            "idNumber": 1,
            "address": "Sejong Road",
            "detailAddress": "000 Sejong Road, Junggu, Seoul",
            "schoolEmail": "university@email.net",
            "department": "The national language",
            "nationality": "Republic of Korea",
            "motherTongue": "Korean",
            "consultation": "bvc",
            "createdDate": "2020-07-15T02:03:18",
            "updateDate": "2020-08-13T02:17:56",
            "fcmToken": "c1TDG0TvRXmkeAOy1VEJ8y:APA91bGkQo5Y7ttdDXwmKsVmq1Wbpxrwc9X_ub1QJKQ2Z7Mc2bQH0dG-hlvqdXCFUJdTk6DBBXhqCd35Pr2X-8WUSnbji4fMu_Ir0dBTs4C6EKkIzw8CBaUgfqgP63b8tkJZUzfE0RF7"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Update User Infomation [PUT /api/users/edit]
Update Users infomation.

+ Request (application/json)

        {
            "email": "duclongbuivn@gmail.com",
            "password": "123456",
            "name": "logn",
            "avatar": "abcxyz",
            "phone": "56465465",
            "gender": "male",
            "identity": "Student",
            "degree": "Bachelor",
            "schoolId": 1,
            "idNumber": 1,
            "nationality": "Republic of Korea",
            "department": "The national language",
            "motherTongue": "Korean",
            "consultation": "abcxyz",
            "address": "Sejong Road",
            "detailAddress": "000 Sejong Road, Junggu, Seoul",
            "schoolEmail": "university@email.net",
            "department": null,
            "nationality": "Republic of Korea",
            "motherTongue": "English",
            "consultation": "e",
        }
    
+ Response 200 (application/json)

        {
            "id": 4,
            "email": "student1@gmail.com",
            "password": "df10ef8509dc176d733d59549e7dbfaf",
            "name": "long",
            "avatar": "",
            "phone": "086365445",
            "gender": "Female",
            "identity": "STUDENT",
            "degree": "BACHELOR",
            "school": {
                "id": 3,
                "name": "Seoul Open University",
                "createdDate": "2020-06-19T03:30:37",
                "updateDate": "2020-06-19T03:30:40"
            },
            "idNumber": 654321,
            "address": "ha noi",
            "detailAddress": null,
            "schoolEmail": "university@email.net",
            "department": null,
            "nationality": "Republic of Korea",
            "motherTongue": "English",
            "consultation": "e",
            "createdDate": "2020-06-02T06:17:10",
            "updateDate": "2020-09-08T06:48:09",
            "fcmToken": "c1TDG0TvRXmkeAOy1VEJ8y:APA91bGkQo5Y7ttdDXwmKsVmq1Wbpxrwc9X_ub1QJKQ2Z7Mc2bQH0dG-hlvqdXCFUJdTk6DBBXhqCd35Pr2X-8WUSnbji4fMu_Ir0dBTs4C6EKkIzw8CBaUgfqgP63b8tkJZUzfE0RF7"
        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
        {
          "code": "AUTH_ERROR",
          "message": "Access token is invalid!"
        }
        
### Change Password [POST /api/authorization/changePassword]
Change password of Users.

+ Request (application/json)

        {
            "newpassword": "123456",
            "oldpassword": "654321"
        }
    
+ Response 200 (application/json)

        {
            "code":"PASSWORD_UPDATED",
            "message":"Password updated!",
        }
        
+ Response 400 (application/json)

        {
            "code":"PASSWORD_WRONG",
            "message":"Current password is invalid!",
        }
        
        {
            "code":"PASSWORD_NOT_MATCH",
            "message":"Current password is invalid!",
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
        {
          "code": "AUTH_ERROR",
          "message": "Access token is invalid!"
        }
        
+ Response 500 (application/json)

        {
            "code":"DB_ERROR",
            "message":"Cannot execute query!",
        }
        
### UploadFile [POST /api/file/upload]
Upload File.

+ Request (application/json)

        {
            "Content-Disposition": "form-data; name="images[files]"; filename="image1.jpg",filename="image2.jpg",filename="image3.jpg""
        }
    
+ Response 200 (application/json)

        {
            [
              "https://backend-resource.s3.ap-northeast-2.amazonaws.com/URK7865529/1000_F_135455671_IDuus0CbgMpizEhhN09JdxEWQDHVMf1V-2019-11-05-33-32.jpg",
              "https://backend-resource.s3.ap-northeast-2.amazonaws.com/URK7865529/1000_F_135455671_IDuus0CbgMpizEhhN09JdxEWQDHVMf1V-2019-11-05-33-32.jpg",
              "https://backend-resource.s3.ap-northeast-2.amazonaws.com/URK7865529/1000_F_135455671_IDuus0CbgMpizEhhN09JdxEWQDHVMf1V-2019-11-05-33-32.jpg"
            ]
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
        {
          "code": "AUTH_ERROR",
          "message": "Access token is invalid!"
        }
        
### Get Academic Information [GET /api/academic/information/{schoolId}]
Academic Information.

+ Response 200 (application/json)

        
        {
            "totalGrades": 600,
            "accquiredGrade": 0,
            "completeCourses": 3,
            "gpa": 0,
            "percentage": 0,
            "semesters": [
                {
                    "semester": "2020/1",
                    "schoolYear": 1,
                    "numberSubjects": 3,
                    "completeCourses": 0,
                    "accquiredGrade": 0,
                    "gpa": 0,
                    "percentage": 0
                },
                {
                    "semester": "2020/2",
                    "schoolYear": 1,
                    "numberSubjects": 0,
                    "completeCourses": 0,
                    "accquiredGrade": 0,
                    "gpa": 0,
                    "percentage": 0
                }
            ]
        }
        
        
+ Response 400 (application/json)

        {
            "code":"PASSWORD_WRONG",
            "message":"Current password is invalid!",
        }
        
        {
            "code":"PASSWORD_NOT_MATCH",
            "message":"Current password is invalid!",
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
        {
          "code": "AUTH_ERROR",
          "message": "Access token is invalid!"
        }
        
+ Response 500 (application/json)

        {
            "code":"DB_ERROR",
            "message":"Cannot execute query!",
        }
        
## Group Search

### Search Users [GET /api/search/users{?keyword,page,identity}]
Search user infomation by name

identity: STUDENT or PROFESSOR-EMPLOYEE

+ Parameters
    + keyword -  A query variable
    + page -  A query variable
    + identity -  A query variable
+ Response 200 (application/json)

        [
            {
                "id":1,
                "name":"duclong",
                "avatar":"http://supportu.long.png"
            },
            {
                "id":2,
                "name":"long bui",
                "avatar":"http://supportu.longbui.png"
            }
        ]
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Search Classes [GET /api/search/class{?keyword,page}]
Search all classes infomation by name

+ Parameters
    + keyword -  A query variable
    + page -  A query variable
+ Response 200 (application/json)

        [
            {
                "id": 63,
                "name": "class name 2",
                "professorName": "Hoang Kim Dong Prof",
                "code": "123A",
                "color": "#AAAAAA",
                "absentTime": 1,
                "role": "PROFESSOR",
                "day": "WED",
                "status": "ACTIVE",
                "classroomCode": "0",
                "semesterStartDate": "2020-10-06T06:49:05",
                "createdDate": "2020-09-01T03:43:36",
                "updateDate": "2020-10-13T23:07:31",
                "assignmentInfos": [
                     {
                        "id": 107,
                        "week": 0,
                        "title": "t1"
                    }
                ],
                "quizInfos": [
                    {
                        "id": 107,
                        "week": 0,
                        "title": "t1"
                    }
                ],
                "discussionInfos": [
                    {
                        "id": 107,
                        "week": 0,
                        "title": "t1"
                    }
                ],
                "classMaterialInfos": [
                    {
                        "id": 107,
                        "week": 0,
                        "title": "t1"
                    }
                ],
                "courses": [
                        {
                            "week": 1,
                            "courseInformations": [
                                {
                                    "id": 117,
                                    "week": 1,
                                    "title": "assign bug 69",
                                    "type": "ASSIGNMENT",
                                    "position": 0
                                },
                                {
                                    "id": 61,
                                    "week": 1,
                                    "title": "bug 66",
                                    "type": "MATERIAL",
                                    "position": 0
                                }
                            ]
                        },
                        {
                            "week": 2,
                            "courseInformations": []
                        }
                ]
            },
            {
                "id": 64,
                "name": "class name 3",
                "professorName": "Hobng Kim Dong Prof",
                "code": "123A",
                "color": "#AAAAAA",
                "absentTime": 1,
                "day": "WED",
                "status": "ACTIVE",
                "classroomCode": "0",
                "semesterStartDate": "2020-10-06T06:49:05",
                "createdDate": "2020-09-01T03:43:36",
                "updateDate": "2020-10-13T23:07:31",
                "assignmentInfos": [
                    {
                        "id": 107,
                        "week": 0,
                        "title": "t1"
                    }
                ],
                "quizInfos": [
                    {
                        "id": 107,
                        "week": 0,
                        "title": "t1"
                    }
                ],
                "discussionInfos": [
                    {
                        "id": 107,
                        "week": 0,
                        "title": "t1"
                    }
                ],
                "classMaterialInfos": [
                    {
                        "id": 107,
                        "week": 0,
                        "title": "t1"
                    }
                ],
                "courses": [
                        {
                            "week": 1,
                            "courseInformations": [
                                {
                                    "id": 117,
                                    "week": 1,
                                    "title": "assign bug 69",
                                    "type": "ASSIGNMENT",
                                    "position": 0
                                },
                                {
                                    "id": 61,
                                    "week": 1,
                                    "title": "bug 66",
                                    "type": "MATERIAL",
                                    "position": 0
                                }
                            ]
                        },
                        {
                            "week": 2,
                            "courseInformations": []
                        }
                ]
            }
        ]
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

### Search Schools [GET /api/search/schools{?keyword}]
Search school infomation by name

+ Parameters
    + keyword -  A query variable
+ Response 200 (application/json)

        [
            {
                "id": 1,
                "name": "Seoul Technolozy University",
                "createdDate": "2020-06-19T03:29:29",
                "updateDate": "2020-06-19T03:29:34"
            },
            {
                "id": 2,
                "name": "Seoul Intenational University",
                "createdDate": "2020-06-19T03:30:05",
                "updateDate": "2020-06-19T03:30:09"
            },
            {
                "id": 3,
                "name": "Seoul Open University",
                "createdDate": "2020-06-19T03:30:37",
                "updateDate": "2020-06-19T03:30:40"
            }
        ]
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

        
## Group Classes
### Create Classes [POST /api/classes/create]    
Create class

+ Request (application/json)

        {
           "name": "class name",
            "nameEng": "class name english",
            "professorName": "Hong Kim Dong Prof",
            "faculty": "abcxyz",
            "code": "123A",
            "semester": "0000year",
            "classIficationNumber": "123",
            "courseClassification": "123",
            "creadits": 1000,
            "maximumStudent": 20,
            "classroom": "Room",
            "classroomCode": "Abc",
            "lectureTimes":[
                {
                    "day": "MON",
                    "fromHour": "15:30",
                    "toHour": "19:10"
                },
                {
                    "day": "TUE",
                    "fromHour": "16:30",
                    "toHour": "18:10"
                }
            ],
            "advisors":[
                {
                    "userId": 123,
                    "role": "VIEWER"
                },
                {
                    "userId": 456,
                    "role": "FULLCONTROL"
                }
            ],
            "inviteStudents": [1, 2 , 3],
            "availability": "PUBLIC",
            "chattingRoom": "yes",
            "introduction": "intro...",
            "objectives": "object...",
            "learningMethod": "online",
            "gradingMethod": "online",
            "excerciseByWeek": "1",
            "addingExcercise": "abcxyz",
            "numberWeek": 2,
            "color": "#FF0000FF",
            "syllabus": [
                {
                    "week": 1,
                    "topic": "topic 1",
                    "content": "abcxyz"
                },
                {
                    "week": 2,
                    "topic": "topic 2",
                    "content": "abcxyz"
                }
            ]
        }

+ Response 201

        {
               "id": 60,
                "name": "class name",
                "nameEng": "class name english",
                "userId": 1,
                "professorName": "Hong Kim Dong Prof",
                "faculty": "abcxyz",
                "code": "123A",
                "semester": "0000year",
                "classIficationNumber": "123",
                "courseClassification": "123",
                "creadits": 1000,
                "maximumStudent": 20,
                "classroom": "Room",
                "classroomCode": "Abc",
                "lectureTimes": [
                    {
                        "id": 7,
                        "classId": 60,
                        "day": "MON",
                        "fromHour": "15:30",
                        "toHour": "19:10",
                        "createdDate": "2020-08-18T10:06:34",
                        "updateDate": "2020-08-18T10:06:34"
                    },
                    {
                        "id": 8,
                        "classId": 60,
                        "day": "TUE",
                        "fromHour": "16:30",
                        "toHour": "18:10",
                        "createdDate": "2020-08-18T10:06:34",
                        "updateDate": "2020-08-18T10:06:34"
                    }
                ],
                "advisors": [
                    {
                        "id": 5,
                        "classId": 60,
                        "userId": 1,
                        "role": "VIEWER",
                        "createdDate": "2020-08-18T10:06:34",
                        "updateDate": "2020-08-18T10:06:34"
                    },
                    {
                        "id": 6,
                        "classId": 60,
                        "userId": 1,
                        "role": "FULLCONTROL",
                        "createdDate": "2020-08-18T10:06:35",
                        "updateDate": "2020-08-18T10:06:35"
                    }
                ],
                "inviteStudents": [
                    {
                        "id": 1,
                        "name": "tieulong",
                        "avatar": ""
                    },
                    {
                        "id": 2,
                        "name": "teacher1",
                        "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg"
                    },
                    {
                        "id": 3,
                        "name": "user 3",
                        "avatar": ""
                    }
                ],
                "availability": "PUBLIC",
                "chattingRoom": "yes",
                "introduction": "intro...",
                "objectives": "object...",
                "learningMethod": "online",
                "gradingMethod": "online",
                "excerciseByWeek": "1",
                "addingExcercise": "abcxyz",
                "numberWeek": 2,
                "syllabus": [
                    {
                        "id": 62,
                        "classId": 60,
                        "week": 1,
                        "topic": "topic 1",
                        "content": "abcxyz",
                        "createdDate": "2020-08-18T10:06:35",
                        "updateDate": "2020-08-18T10:06:35"
                    },
                    {
                        "id": 63,
                        "classId": 60,
                        "week": 2,
                        "topic": "topic 2",
                        "content": "abcxyz",
                        "createdDate": "2020-08-18T10:06:36",
                        "updateDate": "2020-08-18T10:06:36"
                    }
                ],
                "color": "#FF0000FF",
                "createdDate": "2020-08-18T10:06:33",
                "updateDate": "2020-08-18T10:06:33"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 400 (application/json)

        {
            "code": "EXCESSCAPACITY",
            "message": "The number of users has reached the limit"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Database Error or some exceptions on Server!",
        }
        
### Edit Classes [PUT /api/classes/edit/{classId}]    
Edit class

+ Request (application/json)

        {
            "classIficationNumber": "123456",
            "courseClassification": "123",
            "creadits": 1000,
            "maximumStudent": 20,
            "classroom": "Room",
            "lectureTimes":[
                {
                    "day": "MON",
                    "fromHour": "15:30",
                    "toHour": "19:10"
                },
                {
                    "day": "TUE",
                    "fromHour": "16:30",
                    "toHour": "18:10"
                }
            ],
            "advisors":[
                {
                    "userId": 1,
                    "role": "VIEWER"
                },
                {
                    "userId": 2,
                    "role": "FULL_CONTROL"
                }
            ],
            "inviteStudents": [4, 5 , 6],
            "availability": "PUBLIC",
            "chattingRoom": "yes",
            "introduction": "intro...",
            "objectives": "object...",
            "learningMethod": "online",
            "gradingMethod": "online",
            "excerciseByWeek": "1",
            "addingExcercise": "abcxyz",
            "numberWeek": 2,
            "color": "#FF0000FF",
            "syllabus": [
                {
                    "week": 1,
                    "topic": "topic 1",
                    "content": "abcxyz"
                },
                {
                    "week": 2,
                    "topic": "topic 2",
                    "content": "abcxyz"
                }
            ]
        }

+ Response 200

        {
            "id": 70,
            "name": "class name",
            "nameEng": "class name english",
            "userId": 1,
            "professorName": "Hong Kim Dong Prof",
            "faculty": "abcxyz",
            "code": "123A",
            "semester": "0000year",
            "classIficationNumber": "123456",
            "courseClassification": "123",
            "creadits": 1000,
            "maximumStudent": 20,
            "classroom": "Room",
            "lectureTimes": [
                {
                    "id": 41,
                    "classId": 70,
                    "day": "MON",
                    "fromHour": "15:30",
                    "toHour": "19:10",
                    "createdDate": "2020-08-31T02:00:38",
                    "updateDate": "2020-08-31T02:00:38"
                },
                {
                    "id": 42,
                    "classId": 70,
                    "day": "TUE",
                    "fromHour": "16:30",
                    "toHour": "18:10",
                    "createdDate": "2020-08-31T02:00:39",
                    "updateDate": "2020-08-31T02:00:39"
                }
            ],
            "inviteStudents": [
                {
                    "id": 4,
                    "name": "Student 1",
                    "avatar": ""
                },
                {
                    "id": 5,
                    "name": "Student 2",
                    "avatar": ""
                },
                {
                    "id": 6,
                    "name": "Student 3",
                    "avatar": ""
                }
            ],
            "availability": "PUBLIC",
            "chattingRoom": "yes",
            "introduction": "intro...",
            "objectives": "object...",
            "learningMethod": "online",
            "gradingMethod": "online",
            "excerciseByWeek": "1",
            "addingExcercise": "abcxyz",
            "numberWeek": 2,
            "syllabus": [
                {
                    "id": 96,
                    "classId": 70,
                    "week": 1,
                    "topic": "topic 1",
                    "content": "abcxyz",
                    "createdDate": "2020-08-31T02:00:39",
                    "updateDate": "2020-08-31T02:00:39"
                },
                {
                    "id": 97,
                    "classId": 70,
                    "week": 2,
                    "topic": "topic 2",
                    "content": "abcxyz",
                    "createdDate": "2020-08-31T02:00:39",
                    "updateDate": "2020-08-31T02:00:39"
                }
            ],
            "color": "#FF0000FF",
            "createdDate": "2020-08-27T01:53:00",
            "updateDate": "2020-08-31T02:00:37"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
        {
            "code": "EXCESSCAPACITY",
            "message": "The number of users has reached the limit"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get User Classes [GET /api/classes]    
Get all my classes

+ Response 200

        [
               {
                    "id": 1,
                    "name": "Class name 1",
                    "professorName": "Hong Kim Dong Prof",
                    "code": "132",
                    "color": null,
                    "absentTime": 0,
                    "day": null,
                    "status": "ACTIVE",
                    "classroomCode": "0",
                    "semesterStartDate": "2020-10-06T09:01:54",
                    "createdDate": "2020-10-05T22:45:43",
                    "updateDate": "2020-10-06T19:58:55",
                    "assignments": [
                        {
                            "id": 1,
                            "week": 0,
                            "title": "assignment name 1"
                        },
                        {
                            "id": 2,
                            "week": 0,
                            "title": "assignment name 2"
                        }
                    ],
                    "quizes": [
                        {
                            "id": 1,
                            "week": 0,
                            "title": "quiz 1"
                        },
                        {
                            "id": 104,
                            "week": 0,
                            "title": "quizs name long test"
                        }
                    ],
                    "discussions": [
                        {
                            "id": 1,
                            "week": 0,
                            "title": "discussion name 1"
                        },
                        {
                            "id": 156,
                            "week": 0,
                            "title": "ttt"
                        }
                    ],
                    "classMaterials": [
                        {
                            "id": 41,
                            "week": 0,
                            "title": "longbd title material"
                        },
                        {
                            "id": 42,
                            "week": 0,
                            "title": "lllll"
                        }
                    ],
                    "courses": [
                        {
                            "week": 1,
                            "courseInformations": [
                                {
                                    "id": 117,
                                    "week": 1,
                                    "title": "assign bug 69",
                                    "type": "ASSIGNMENT",
                                    "position": 0
                                },
                                {
                                    "id": 61,
                                    "week": 1,
                                    "title": "bug 66",
                                    "type": "MATERIAL",
                                    "position": 0
                                }
                            ]
                        },
                        {
                            "week": 2,
                            "courseInformations": []
                        }
                    ]
                },
                {
                    "id": 2,
                    "name": "Class name 2",
                    "professorName": "Hong Kim Dong Prof",
                    "code": "133",
                    "color": null,
                    "absentTime": 0,
                    "day": null,
                    "status": "ACTIVE",
                    "classroomCode": "0",
                    "semesterStartDate": "2020-10-06T09:01:54",
                    "createdDate": "2020-10-05T22:45:43",
                    "updateDate": "2020-10-06T19:58:55",
                    "assignments": [
                        {
                            "id": 1,
                            "week": 0,
                            "title": "assignment name 1"
                        },
                        {
                            "id": 2,
                            "week": 0,
                            "title": "assignment name 2"
                        }
                    ],
                    "quizes": [
                        {
                            "id": 1,
                            "week": 0,
                            "title": "quiz 1"
                        },
                        {
                            "id": 104,
                            "week": 0,
                            "title": "quizs name long test"
                        }
                    ],
                    "discussions": [
                        {
                            "id": 1,
                            "week": 0,
                            "title": "discussion name 1"
                        },
                        {
                            "id": 156,
                            "week": 0,
                            "title": "ttt"
                        }
                    ],
                    "classMaterials": [
                        {
                            "id": 41,
                            "week": 0,
                            "title": "longbd title material"
                        },
                        {
                            "id": 42,
                            "week": 0,
                            "title": "lllll"
                        }
                    ],
                    "courses": [
                        {
                            "week": 1,
                            "courseInformations": [
                                {
                                    "id": 117,
                                    "week": 1,
                                    "title": "assign bug 69",
                                    "type": "ASSIGNMENT",
                                    "position": 0
                                },
                                {
                                    "id": 61,
                                    "week": 1,
                                    "title": "bug 66",
                                    "type": "MATERIAL",
                                    "position": 0
                                }
                            ]
                        },
                        {
                            "week": 2,
                            "courseInformations": []
                        }
                    ]
                },
        ]

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Delete Class [DELETE /api/classes/{id}]    
Delete my classes. Only owner who created class can be delete their class

+ Response 200

        {
            "code":"DELETE_SUCCESS",
            "message":"Delete class successfuly"
        }
+ Response 400 (application/json)
        
        {
            "code":"OWER_ERROR",
            "message":"Can't delete class is not of yourseft created",
        }
        

        
### Delete Student in Class [DELETE /api/classstudents/export/{classId}]    
Delete student in Class

+ Request (application/json)

        {
            "studentsID":[4,5]
        }

+ Response 200

        {
            "code": "DELETE_SUCCESS",
            "message": "Deleted Successfully!"
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

### Enroll in Classes [POST /api/classstudents/registration/{classId}]    
Post Enroll in classes

+ Request (application/json)

        {
            "inviteCode": "23E"
        }

+ Response 200

        {
            "code": "REGISTRATION_SUCCESS",
            "message": "Registration success!"
        }
+ Response 400

        {
            "code": "USER_REGISTERED",
            "message": "User already registered!"
        }
        {
            "code": "INVITECODE_INVALID",
            "message": "The invite code is invalid!"
        }
        
        {
            "code": "EXCESSCAPACITY",
            "message": "The number of users has reached the limit"
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
  
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Classes Information [GET /api/classes/information]    
Classes Information

+ Response 200

        [
            {
                "semester": "2020/1",
                "classes": [
                    {
                        "name": "class name 4",
                        "nameEnglish": "class name english",
                        "professorName": "Hocng Kim Dong Prof",
                        "code": "123A"
                    },
                    {
                        "name": "class name 6",
                        "nameEnglish": "class name english",
                        "professorName": "Hoeng Kim Dong Prof",
                        "code": "abcd"
                    }
                ]
            },
            {
                "semester": "2020/2",
                "classes": [
                    {
                        "name": "dfgdfg",
                        "nameEnglish": "fgfg",
                        "professorName": "gf",
                        "code": "gg"
                    },
                    {
                        "name": "test real 1",
                        "nameEnglish": "45t",
                        "professorName": "th",
                        "code": "hhu"
                    },
                    {
                        "name": "test real 2",
                        "nameEnglish": "aa",
                        "professorName": "bb",
                        "code": "dd"
                    }
                ]
            }
        ]

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
  
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Classes List Import From Admin [GET /api/classes/list/import]    
Classes List Import

+ Response 200

        [
            {
                "id": 146,
                "name": "aaa",
                "nameEnglish": "a",
                "userId": 3,
                "schoolId": 10,
                "professorName": "a",
                "faculty": "Department abc",
                "code": "kkkkk",
                "semester": "2020 2",
                "semesterStartDate": "0001-01-01T00:00:00"
            },
            {
                "id": 147,
                "name": "aaa",
                "nameEnglish": "a",
                "userId": 3,
                "schoolId": 10,
                "professorName": "a",
                "faculty": "Department abc",
                "code": "kkkkk",
                "semester": "2020 2",
                "semesterStartDate": "0001-01-01T00:00:00"
            }
        ]

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
  
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
## Group Detail Information of Classes for Student
### Get Detail Information of Class [GET /api/classesdetail/detail/{classId}]    
Get detail informatioin of class

+ Response 200

        {
               "id": 63,
                "name": "class name",
                "userId": 1,
                "professorName": "Hong Kim Dong Prof",
                "faculty": "abcxyz",
                "code": "123A",
                "semester": "0000year",
                "classIficationNumber": "123",
                "courseClassification": "123",
                "creadits": 1000,
                "maximumStudent": 20,
                "students": [
                    {
                        "id": 1,
                        "name": "tieulong",
                        "avatar": ""
                    },
                    {
                        "id": 2,
                        "name": "teacher1",
                        "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg"
                    },
                    {
                        "id": 3,
                        "name": "user 3",
                        "avatar": ""
                    }
                ],
                "classroom": "Room",
                "lectureTime": [
                    {
                        "id": 11,
                        "classId": 63,
                        "day": "MON",
                        "fromHour": "15:30",
                        "toHour": "19:10",
                        "createdDate": "2020-08-18T03:17:14",
                        "updateDate": "2020-08-18T03:17:14"
                    },
                    {
                        "id": 12,
                        "classId": 63,
                        "day": "TUE",
                        "fromHour": "16:30",
                        "toHour": "18:10",
                        "createdDate": "2020-08-18T03:17:14",
                        "updateDate": "2020-08-18T03:17:14"
                    }
                ],
                "advisors": [
                    {
                        "id": 1,
                        "name": "tieulong",
                        "avatar": ""
                    },
                    {
                        "id": 1,
                        "name": "tieulong",
                        "avatar": ""
                    }
                ],
                "availability": "PUBLIC",
                "chattingRoom": "yes",
                "introduction": "intro...",
                "objectives": "object...",
                "learningMethod": "online",
                "gradingMethod": "online",
                "excerciseByWeek": "1",
                "addingExcercise": "abcxyz",
                "numberWeek": 2,
                "color": "#EC5D66",
                "role": "PROFESSOR",
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Dlass Syllabus [GET /api/classesdetail/detail/syllabus/{classId}]    
Get detail class syllabus 

+ Response 200

        {
            [
                {
                    "id": 4,
                    "week": 1,
                    "topic": "topic 1",
                    "content": "b"
                },
                {
                    "id": 5,
                    "week": 1,
                    "topic": "topic 1"
                    "content": "b"
                },
                {
                    "id": 6,
                    "week": 1,
                    "topic": "topic 1"
                    "content": "b"
                }
            ]
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Course Information [GET /api/classesdetail/detail/courseinformation/{classId}]    
Get course information

+ Response 200

        [
            {
                "week": 1,
                "courseInformations": [
                    {
                        "id": 71,
                        "week": 1,
                        "title": "assignment 1",
                        "type": "ASSIGNMENT",
                        "position": 1
                    },
                    {
                        "id": 36,
                        "week": 1,
                        "title": "live douplicate 5",
                        "type": "LIVE",
                        "position": 2
                    }
                ]
            },
            {
                "week": 2,
                "courseInformations": [
                    {
                        "id": 157,
                        "week": 2,
                        "title": "discussion",
                        "type": "DISCUSSION",
                        "position": 1
                    },
                    {
                        "id": 7,
                        "week": 2,
                        "title": "live 1",
                        "type": "LIVE",
                        "position": 1
                    }
                ]
            },
            {
                "week": 3,
                "courseInformations": [
                    {
                        "id": 73,
                        "week": 3,
                        "title": "Assignment B",
                        "type": "ASSIGNMENT",
                        "position": 1
                    },
                    {
                        "id": 120,
                        "week": 3,
                        "title": "quiz 3",
                        "type": "QUIZ",
                        "position": 1
                    }
                ]
            },
            {
                "week": 4,
                "courseInformations": [
                    {
                        "id": 53,
                        "week": 4,
                        "title": null,
                        "type": "ATTENDANCE_QUIZ",
                        "position": 1
                    }
                ]
            },
            {
                "week": 5,
                "courseInformations": [
                    {
                        "id": 2,
                        "week": 5,
                        "title": null,
                        "type": "ATTENDANCE_QUIZ",
                        "position": 1
                    },
                    {
                        "id": 54,
                        "week": 5,
                        "title": null,
                        "type": "ATTENDANCE_QUIZ",
                        "position": 1
                    }
                ]
            }
        ]
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        

        
### Get Detail Duedate Status [GET /api/classesdetail/detail/student/duedate/{classId}]    
Get detail duedate of student

+ Response 200

        {
               "assignments": [
                {
                    "id": 1,
                    "title": "abc",
                    "dueDate": "2020-07-22T03:08:44",
                    "submit": false
                },
                {
                    "id": 2,
                    "title": "abc",
                    "dueDate": "2020-08-20T03:08:48",
                    "submit": true
                },
                {
                    "id": 46,
                    "title": "abc",
                    "dueDate": "2020-08-20T09:45:00",
                    "submit": false
                },
                {
                    "id": 47,
                    "title": "abc",
                    "dueDate": "2020-08-06T13:30:00",
                    "submit": false
                },
                {
                    "id": 63,
                    "title": "abc",
                    "dueDate": "2020-08-04T00:22:15",
                    "submit": false
                }
            ],
            "discussions": [
                {
                    "id": 10,
                    "title": "abc",
                    "dueDate": "2020-08-07T04:44:26",
                    "submit": false
                },
                {
                    "id": 19,
                    "title": "abc",
                    "dueDate": "2020-08-07T04:44:26",
                    "submit": true
                },
                {
                    "id": 97,
                    "title": "abc",
                    "dueDate": "2020-08-27T02:55:23",
                    "submit": false
                }
            ],
            "quizes": [
                {
                    "id": 1,
                    "title": "abc",
                    "dueDate": "2020-08-07T04:44:26",
                    "submit": true
                },
                {
                    "id": 156,
                    "title": "abc",
                    "dueDate": "2020-08-27T02:55:23",
                    "submit": false
                }
            ],
            "submit": 3,
            "notSubmit": 7
        }
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

### Get Detail Score Status [GET /api/classesdetail/detail/student/score/{classId}]    
Get detail score
+ Response 200

        {
            "assignments": [
                {
                    "id": 2,
                    "title": "abc",
                    "totalScore": 30,
                    "score": 5
                },
                {
                    "id": 4,
                    "title": "abc",
                    "totalScore": 100,
                    "score": 7
                }
            ],
            "discussions": [
                {
                    "id": 2,
                    "title": "abc",
                    "totalScore": 0,
                    "score": 50
                }
            ],
            "quizes": [
                {
                    "id": 2,
                    "title": "abc",
                    "totalScore": 0,
                    "score": 30
                }
            ],

            "score": 92,
            "total": 130
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Attendance Status [GET /api/classesdetail/detail/attendancestatus/{classId}]    
Get detail attendance status for student
+ Response 200

        {
            "attendances": [
                {
                    "id": 33,
                    "week": 1,
                    "status": "ABSENT"
                },
                {
                    "id": 1,
                    "week": 2,
                    "status": "ATTENDANCE"
                },
                {
                    "id": 0,
                    "week": 3,
                    "status": null
                }
            ],
            "absent": 1
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
## Group Detail Information of Classes for Professor
        
### Get Detail Attendance Status for Professor [GET /api/classesdetail/detail/attendanceinfo/{classId}]    
Get detail attendance status for student
+ Response 200

        {
           [
                {
                    "id": 1,
                    "week": 1,
                    "numSubmit": 2,
                    "maxNumber": 15
                },
                {
                    "id": 4,
                    "week": 1,
                    "numSubmit": 2,
                    "maxNumber": 15
                },
                {
                    "id": 2,
                    "week": 5,
                    "numSubmit": 1,
                    "maxNumber": 15
                }
            ]
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

### Get Detail Duedate Status for Professor [GET /api/classesdetail/detail/staff/duedate/{classId}]    
Get detail duedate status for professor
+ Response 200

        {
            "dueDates": [
                    {
                        "week": 1,
                        "dueDateDetails": [
                            {
                                "id": 53,
                                "title": "material1",
                                "dueDate": "2020-09-25T02:39:38",
                                "submit": false,
                                "week": 1
                            },
                            {
                                "id": 148,
                                "title": "q4",
                                "dueDate": "2020-10-29T20:11:54",
                                "submit": true,
                                "week": 1
                            }
                        ]
                    },
                    {
                        "week": 2,
                        "dueDateDetails": [
                            {
                                "id": 121,
                                "title": "quiz 2",
                                "dueDate": "2020-10-29T19:29:58",
                                "submit": true,
                                "week": 2
                            },
                            {
                                "id": 157,
                                "title": "discussion",
                                "dueDate": "2020-10-05T23:15:41",
                                "submit": false,
                                "week": 2
                            }
                        ]
                    },
                    {
                        "week": 3,
                        "dueDateDetails": [
                            {
                                "id": 73,
                                "title": "Assignment B",
                                "dueDate": "2020-09-24T19:30:50",
                                "submit": false,
                                "week": 3
                            },
                            {
                                "id": 120,
                                "title": "quiz 3",
                                "dueDate": "2020-10-22T20:00:35",
                                "submit": true,
                                "week": 3
                            }
                        ]
                    },
                    {
                        "week": 4,
                        "dueDateDetails": []
                    }
                ],
                "submit": 6,
                "notSubmit": 4
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Score Status [GET /api/classesdetail/detail/staff/score/{classId}]    
Get detail score
+ Response 200

        {
            "scores": [
                    {
                        "week": 1,
                        "statusScores": [
                            {
                                "id": 71,
                                "title": "assignment 1",
                                "score": 234,
                                "week": 1
                            },
                            {
                                "id": 148,
                                "title": "q4",
                                "score": 20,
                                "week": 1
                            }
                        ]
                    },
                    {
                        "week": 2,
                        "statusScores": [
                            {
                                "id": 121,
                                "title": "quiz 2",
                                "score": 50,
                                "week": 2
                            },
                            {
                                "id": 157,
                                "title": "discussion",
                                "score": 83,
                                "week": 2
                            }
                        ]
                    },
                    {
                        "week": 3,
                        "statusScores": [
                            {
                                "id": 73,
                                "title": "Assignment B",
                                "score": 50,
                                "week": 3
                            },
                            {
                                "id": 120,
                                "title": "quiz 3",
                                "score": 80,
                                "week": 3
                            }
                        ]
                    }
                ],
                "totalScore": 619
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Class Student List [GET /api/classstudents/studentlist/{classId}]    
Get detail class student list (45)

+ Response 200

        {
            "students": [
                {
                    "id": 1,
                    "name": "tieulong",
                    "idNumber": 1,
                    "avatar": ""
                },
                {
                    "id": 2,
                    "name": "teacher1",
                    "idNumber": 123456,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg"
                }
            ],
            "numberStudent": 2,
            "maximumStudent": 15
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
## Group Courses
### Create Course position [POST /api/courses/position/{classId}]    
Create Course position

+ Request (application/json)

        {
            "week": 1,
            "courseInformations":
            [
                {
                    "id": 3,
                    "type": "LIVE",
                    "position": 1,
                },
                {
                    "id": 2,
                    "type": "ASSIGNMENT",
                    "position": 1,
                },
            ]
           
        }
        
+ Response 200

        {
            [
                {
                    "id": 6,
                    "classId": 1,
                    "userId": 1,
                    "courseId": 3,
                    "type": "LIVE",
                    "position": 1,
                    "week": 1,
                    "createdDate": "0001-01-01T00:00:00",
                    "updateDate": "0001-01-01T00:00:00"
                },
                {
                    "id": 7,
                    "classId": 1,
                    "userId": 1,
                    "courseId": 2,
                    "type": "ASSIGNMENT",
                    "position": 1,
                    "week": 1,
                    "createdDate": "0001-01-01T00:00:00",
                    "updateDate": "0001-01-01T00:00:00"
                }
            ]
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

        
## Group Assignments
### Create Assignment [POST /api/assignments/create/{classId}]    
Create assignment

+ Request (application/json)

        {
            "week": 3,
            "title": "assignment name 1",
            "description": "abcxyz",
            "classId": 1,
            "totalScore": 100,
            "dueDate": "2020-06-25T08:41:43",
            "attachments": ["abcxyz", "abcxyz"]
        }
        
+ Response 200

        {
            "id": 61,
            "week": 3,
            "title": "assignment name 1",
            "description": "abcxyz",
            "classId": 2,
            "totalScore": 100,
            "dueDate": "2020-06-24T19:41:43",
            "attachments": [
                "abcxyz",
                "abcxyz"
            ],
            "createdDate": "2020-08-10T08:55:22",
            "updateDate": "2020-08-10T08:55:22"
        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Assignment Of Course [GET /api/assignments/{course_id}]    
Get all assignment of course

+ Response 200

        [
            {
                "id": 1,
                "name": "assignment name",
                "description": "Description of assignment",
                "courseId": 1,
                "createdDate": "2020-07-30T12:32:27",
                "updateDate": "2020-07-30T12:32:27"
            },   
            {
                "id": 2,
                "name": "assignment name",
                "description": "Description of assignment",
                "courseId": 1,
                "createdDate": "2020-07-30T12:32:27",
                "updateDate": "2020-07-30T12:32:27"
            }     
        ]
        
### Get Detail Assignment  [GET /api/assignments/detail/{assignmentId}]    
Get detail assignment

+ Response 200

        {
            "assignment": {
                "id": 1,
                "week": 2,
                "title": "assignment 69",
                "description": "assignment description 1",
                "classId": 1,
                "totalScore": 30,
                "dueDate": "0001-01-01T00:00:00",
                "attachments": [
                    "abcxyz",
                    " abcxyz"
                ],
                "createdDate": "2020-06-26T04:37:35",
                "updateDate": "2020-08-29T00:41:48"
            },
            "submit": 1,
            "total": 3,
            "comments": 2,
            "filesSubmited": [
                "http://18.162.141.53/api.supportu/1600162663732_87___1600162666550___Screenshot_20200630-155744_VR3DSubtitle.jpg"
            ]
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Edit Assignment  [PUT /api/assignments/edit/{assignmentId}]    
Edit assignment

+ Request (application/json)

        {
            "week": 3,
            "title": "assignment name 1",
            "description": "abcxyz",
            "classId": 1,
            "totalScore": 100,
            "dueDate": "2020-06-25T08:41:43",
            "attachments": ["abcxyz", "abcxyz"]
        }

+ Response 200

        {
           "id": 1,
            "week": 2,
            "title": "assignment 69",
            "description": "assignment description 1",
            "classId": 1,
            "totalScore": 30,
            "dueDate": "0001-01-01T00:00:00",
            "attachments": [
                "abcxyz",
                " abcxyz"
            ],
            "createdDate": "2020-06-26T04:37:35",
            "updateDate": "2020-08-29T00:23:59"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Create Assignment Submit for student [POST /api/assignmentssubmits/create/{assignmentId}]    
Create assignment submit for student

+ Request (application/json)

        {
            "attacheds": ["abcxyz", "abcxyz"]
        }

+ Response 200

        {
                   
            "id": 12,
            "assignment": {
                "id": 1,
                "week": 1,
                "title": "assignment 1",
                "description": "description 1",
                "classId": 1,
                "totalScore": 100,
                "dueDate": "2020-09-10T21:00:28",
                "attachments": [
                    "http://18.162.141.53/api.supportu/1599471763927_1___1599471766988___skardu.jpg"
                ],
                "createdDate": "2020-09-03T02:45:13",
                "updateDate": "2020-09-07T21:40:43"
            },
            "userId": 4,
            "attacheds": [
                "abcxyz",
                "abcxyz"
            ],
            "score": 0,
            "createdDate": "2020-09-10T03:18:51",
            "updateDate": "2020-09-10T03:18:51"
        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }

+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

### Create Assignment Commnet [POST /api/assignmentscomments/create/{assignmentId}]    
Create assignment comment

+ Request (application/json)

        {
            "message": "Who I am?"
        }

+ Response 200

        {
           
            "id": 2,
            "assignmentId": 1,
            "userId": 1,
            "message": "Who I am?",
            "createdDate": "2020-08-30T03:34:04",
            "updateDate": "2020-08-30T03:34:04"

        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get All Assignment Commnets [GET /api/assignmentscomments/{assignmentId}?page=]    
Get all assignment comments


+ Response 200

        [
            {
                "id": 1,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 1,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                    "createdDate": null,
                    "updateDate": null
                },
                "createdDate": "2020-09-02T02:37:01",
                "message": "Hello"
            },
            {
                "id": 1,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 1,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                    "createdDate": null,
                    "updateDate": null
                },
                "createdDate": "2020-08-29T20:34:04",
                "message": "Who I am?"
            }
        ]
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get List Student Assignment Submit [GET /api/assignments/studentlist/assignmentsubmit/{assignmentId}{?type}]    
Get assignment confirm
type: NAME / STATUS

+ Parameters
    + type - A query variable

+ Response 200

        [
            {
                "assignmentId": 1,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 1,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                    "createdDate": null,
                    "updateDate": null
                },
                "attachment": [],
                "submit": false
            },
            {
                "assignmentId": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 4,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "attachments": [
                        "abcxyz",
                        "abcxyz"
                ],
                "submit": true
            },
            {
                "assignmentId": 1,
                "user": {
                    "id": 29,
                    "name": "user 10",
                    "idNumber": 1,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "attachment": [],
                "submit": false
            }
        ]
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Input Score Assignment Submit [PUT /api/assignments/inputscore/{assignmentId}]    
Enter score assignment submit

+ Request (application/json)

        {
            "Scores": [
                {
                    "userId" : 4,
                    "score": 10
                },
                {
                    "userId" : 5,
                    "score": 21
                }
            ]
        }

+ Response 200

        {
           
            "code": "UPDATE_SUCCESS",
            "message": "Request confirmed!"

        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Delete Assignment [DELETE /api/assignments/{assignmentId}]    
Delete Assignment

+ Response 200

        {
            "code": "DELETE_SUCCESS",
            "message": "Deleted Successfully!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }


## Group Quizes
### Create Quizes [POST /api/quizes/create/{classId}]    
Create quizes

+ Request (application/json)

        {
            "week": 1,
            "title": "quizs name",
            "description": "Description",
            "totalScore": 100,
            "dueDate": "2020-06-25T08:41:40",
            "questions": [
                {
                    "type": "MULTIPLE",
                    "question": "What are you doing?", 
                    "answers": ["abcxyz", "abcxyz"],
                    "score": 100
                },
                {
                    "type": "RESPONSIVE",
                    "question": "What are you doing?",
                    "score": 200
                }
            ]
        } 

+ Response 200

        {
            "id": 102,
            "week": 1,
            "title": "quizs name",
            "description": "Description",
            "classId": 2,
            "totalScore": 100,
            "dueDate": "2020-07-30T12:32:27",
            "questions": [
                {
                    "id": 138,
                    "type": "MULTIPLE",
                    "question": "What are you doing?",
                    "answers": [
                        "abcxyz",
                        "abcxyz"
                    ],
                    "quizId": 102,
                    "score": 100,
                    "createdDate": "2020-07-30T10:16:20",
                    "updateDate": "2020-07-30T12:32:27"
                },
                {
                    "id": 139,
                    "type": "RESPONSIVE",
                    "question": "What are you doing?",
                    "answers": null,
                    "quizId": 102,
                    "score": 200,
                    "createdDate": "2020-07-30T12:32:27",
                    "updateDate": "2020-07-30T12:32:27"
                }
            ],
            "createdDate": "2020-07-30T12:32:27",
            "updateDate": "2020-07-30T12:32:27"
        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Edit Quizes [PUT /api/quizes/edit/{quizId}]    
Edit quizes

+ Request (application/json)

        {
            "week": 1,
            "title": "quizs name",
            "description": "Description",
            "totalScore": 100,
            "dueDate": "2020-06-25T08:41:40",
            "questions": [
                {
                    "type": "MULTIPLE",
                    "question": "What are you doing?", 
                    "answers": ["abcxyz", "abcxyz"],
                    "score": 100
                },
                {
                    "type": "RESPONSIVE",
                    "question": "What are you doing?",
                    "score": 200
                }
            ]
        } 

+ Response 200

        {
            "id": 1,
            "week": 1,
            "title": "quizs name dfggfg",
            "description": "Description",
            "classId": 1,
            "totalScore": 100,
            "dueDate": "2020-06-25T01:41:40",
            "questions": [
                {
                    "id": 169,
                    "type": "MULTIPLE",
                    "question": "What are you doing?",
                    "answers": [
                        "abcxyz",
                        "abcxyz"
                    ],
                    "quizId": 1,
                    "score": 100,
                    "createdDate": "2020-08-31T06:24:20",
                    "updateDate": "2020-08-31T06:24:20"
                },
                {
                    "id": 170,
                    "type": "RESPONSIVE",
                    "question": "What are you doing?",
                    "answers": null,
                    "quizId": 1,
                    "score": 200,
                    "createdDate": "2020-08-31T06:24:20",
                    "updateDate": "2020-08-31T06:24:20"
                }
            ],
            "createdDate": "2020-06-26T04:40:13",
            "updateDate": "2020-06-26T04:40:17"
        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Create Quizes Submit [POST /api/quizessubmits/create/{quizId}]    
Create quizes submit

+ Request (application/json)

        {
            "quizesSubmit":[
                {
                    "questionId" : 169,
                    "answer": "I dont know"
                },
                {
                    "questionId" : 170,
                    "answer": "I dont know"
                }
        
            ]
        }

+ Response 200

        [
            {
                "id": 10,
                "quizes": {
                    "id": 1,
                    "week": 1,
                    "title": "quizs name dfggfg",
                    "description": "Description",
                    "classId": 1,
                    "totalScore": 100,
                    "dueDate": "2020-06-25T01:41:40",
                    "questions": "169,170",
                    "createdDate": "2020-06-26T04:40:13",
                    "updateDate": "2020-06-26T04:40:17"
                },
                "userId": 4,
                "quizQuestions": null,
                "answer": "I dont know",
                "type": "MULTIPLE",
                "createdDate": "2020-08-31T08:41:04",
                "updateDate": "2020-08-31T08:41:04"
            },
            {
                "id": 11,
                "quizes": {
                    "id": 1,
                    "week": 1,
                    "title": "quizs name dfggfg",
                    "description": "Description",
                    "classId": 1,
                    "totalScore": 100,
                    "dueDate": "2020-06-25T01:41:40",
                    "questions": "169,170",
                    "createdDate": "2020-06-26T04:40:13",
                    "updateDate": "2020-06-26T04:40:17"
                },
                "userId": 4,
                "quizQuestions": null,
                "answer": "I dont know",
                "type": "RESPONSIVE",
                "createdDate": "2020-08-31T08:41:04",
                "updateDate": "2020-08-31T08:41:04"
            }
        ]
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Quizes [GET /api/quizes/detail/{quizId}]    
Get detail quizes

+ Response 200

        {
            "quiz": {
                "id": 1,
                "week": 1,
                "title": "quizs name dfggfg",
                "description": "Description",
                "classId": 1,
                "totalScore": 100,
                "dueDate": "2020-06-25T01:41:40",
                "questions": [
                    {
                        "id": 169,
                        "type": "MULTIPLE",
                        "question": "What are you doing?",
                        "answers": [
                            "abcxyz"
                        ],
                        "quizId": 1,
                        "score": 100,
                        "createdDate": "2020-08-30T23:24:20",
                        "updateDate": "2020-08-30T23:24:20"
                    },
                    {
                        "id": 170,
                        "type": "RESPONSIVE",
                        "question": "What are you doing?",
                        "answers": [
                            "abcxyz"
                        ],
                        "quizId": 1,
                        "score": 200,
                        "createdDate": "2020-08-30T23:24:20",
                        "updateDate": "2020-08-30T23:24:20"
                    }
                ],
                "createdDate": null,
                "updateDate": null
            },
            "submit": 1,
            "total": 3,
            "comments": 1,
            "anwersSubmited": [
                "Girl",
                "happy"
            ]
        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Create Quizes Comment [POST /api/quizescomments/create/{quizId}]    
Create quizes Comment

+ Request (application/json)

        {
            "message": "Good morning"
        }
        
+ Response 200

        {
            
            "id": 1,
            "quizId": 1,
            "userId": 4,
            "message": "Good morning",
            "createdDate": "2020-08-31T09:29:39",
            "updateDate": "2020-08-31T09:29:39"

        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get All Quizes Comment [GET /api/quizescomments/{quizId}]    
Get all quizes Comment
        
+ Response 200

        [
           {
                "id": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 4,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "createdDate": "2020-08-31T02:29:39",
                "message": "sdfkdfwfwo w oiwj "
            },
            {
                "id": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 4,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "createdDate": "2020-08-31T02:29:39",
                "message": "sdfkdfwfwo w oiwj "
            }
        ]
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get List Student Quizes Submit [GET /api/quizes/studentlist/quizessubmit/{quizId}{?type}]    
Get list student quizes submit

type: NAME / STATUS

+ Parameters
    + type -  A query variable

+ Response 200

        [
            {
                "quizId": 1,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 1,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                    "createdDate": null,
                    "updateDate": null
                },
                "submit": true
            },
            {
                "quizId": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 4,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "submit": true
            },
            {
                "quizId": 1,
                "user": {
                    "id": 29,
                    "name": "user 10",
                    "idNumber": 1,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "submit": false
            }
        ]
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Quiz Check [GET /api/quizes/detail/quizcheck/{userId}/{quizId}]    
Get detail quiz check
        
+ Response 200

        {
            "quiz": {
                "id": 122,
                "week": 1,
                "title": "Quiz B",
                "description": "Description C",
                "classId": 110,
                "totalScore": 110,
                "dueDate": "2020-10-09T20:00:56",
                "questions": "204,205",
                "createdDate": "2020-09-15T00:55:28",
                "updateDate": "2020-09-15T00:55:28"
            },
            "quizesSubmit": [
                {
                    "userId": 4,
                    "quizQuestion": {
                        "id": 204,
                        "answers": "Girl,Football,Money,Car",
                        "question": "What do you like?"
                    },
                    "answer": "Girl",
                    "type": "MULTIPLE"
                },
                {
                    "userId": 4,
                    "quizQuestion": {
                        "id": 205,
                        "answers": "",
                        "question": "what are you doing on tomorrow?"
                    },
                    "answer": "play",
                    "type": "RESPONSIVE"
                }
            ]
        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

### Input Score Quizes [PUT /api/quizes/inputscore/{quizId}]    
Enter score assignment submit

+ Request (application/json)

        {
            "Scores": [
                {
                    "userId" : 4,
                    "score": 10
                },
                {
                    "userId" : 5,
                    "score": 21
                }
            ]
        }

+ Response 200

        {
           
            "code": "UPDATE_SUCCESS",
            "message": "Request confirmed!"

        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Delete Quizes [DELETE /api/quizes/{quizId}]    
Delete quizes

+ Response 200

        {
            "code": "DELETE_SUCCESS",
            "message": "Deleted Successfully!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
## Group Discussions
### Create Discussion [POST /api/discussions/create/{classId}]    
Create Discussion

+ Request (application/json)

        {
            "title": "discussion name",
            "description": "description",
            "week": 1,
            "totalScore": 100,
            "dueDate": "2020-06-25T08:41:40",
            "topics": [
                {
                    "topicName": "mutiple",
                    "score": 100
                },
                {
                    "topicName": "mutiple",
                    "score": 100
                }
            ]
        } 

+ Response 200

        {
            "id": 146,
            "userId": 2,
            "week": 1,
            "title": "discussion name",
            "description": "description",
            "classId": 2,
            "totalScore": 100,
            "dueDate": "2020-06-25T08:41:40",
            "topics": [
                {
                    "id": 77,
                    "topicName": "mutiple",
                    "score": 100,
                    "discussionId": 146,
                    "createdDate": "2020-07-30T12:32:27",
                    "updateDate": "2020-07-30T12:32:27"
                },
                {
                    "id": 78,
                    "topicName": "mutiple",
                    "score": 100,
                    "discussionId": 146,
                    "createdDate": "2020-07-30T12:32:27",
                    "updateDate": "2020-07-30T12:32:27"
                }
            ],
            "createdDate": "2020-07-30T12:32:27",
            "updateDate": "2020-07-30T12:32:27"
        }

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Edit Discussion [PUT /api/discussions/edit/{discusstionId}]    
Edit Discussion

+ Request (application/json)

        {
            "title": "discussion name",
            "description": "description",
            "week": 1,
            "totalScore": 100,
            "dueDate": "2020-06-25T08:41:40",
            "topics": [
                {
                    "topicName": "mutiple",
                    "score": 100
                },
                {
                    "topicName": "mutiple",
                    "score": 100
                }
            ]
        } 

+ Response 200

        {
            "id": 146,
            "week": 1,
            "title": "discussion name",
            "description": "description",
            "classId": 2,
            "totalScore": 100,
            "dueDate": "2020-06-25T08:41:40",
            "topics": [
                {
                    "id": 77,
                    "topicName": "mutiple",
                    "score": 100,
                    "discussionId": 146,
                    "createdDate": "2020-07-30T12:32:27",
                    "updateDate": "2020-07-30T12:32:27"
                },
                {
                    "id": 78,
                    "topicName": "mutiple",
                    "score": 100,
                    "discussionId": 146,
                    "createdDate": "2020-07-30T12:32:27",
                    "updateDate": "2020-07-30T12:32:27"
                }
            ],
            "createdDate": "2020-07-30T12:32:27",
            "updateDate": "2020-07-30T12:32:27"
        }

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

### Get Detail Discussion [GET /api/discussions/detail/{discusstionId}]    
Detail Discussion

+ Response 200

        {
            "discussion": {
                "id": 1,
                "week": 1,
                "title": "discussion 1",
                "description": "haha",
                "classId": 1,
                "totalScore": 50,
                "dueDate": "2020-09-01T11:03:18",
                "topics": [
                    {
                        "id": 79,
                        "topicName": null,
                        "score": 100,
                        "discussionId": 1,
                        "createdDate": "2020-08-06T08:33:37",
                        "updateDate": null
                    },
                    {
                        "id": 80,
                        "topicName": null,
                        "score": 100,
                        "discussionId": 1,
                        "createdDate": "2020-08-06T08:33:38",
                        "updateDate": null
                    }
                ],
                "createdDate": "2020-06-26T04:44:34",
                "updateDate": "2020-09-02T04:03:50"
            },
            "submit": 1,
            "total": 3,
            "comments": 1
        }

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Create Discussion Comments [POST /api/discussioncomments/create/{discusstionId}]    
Create Discussion comments

+ Request (application/json)

        {
            "message": "good morning"
        }

+ Response 200

        {
            "id": 4,
            "discussionId": 1,
            "userId": 4,
            "message": "good morning",
            "createdDate": "2020-09-03T03:53:45",
            "updateDate": "2020-09-03T03:53:45"
        }

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get All Discussion Comments [GET /api/discussioncomments/{discusstionId}]    
Get all Discussion comments

+ Response 200

        [
            {
                "id": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 4,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "createdDate": "2020-09-03T03:53:45",
                "message": "good morning"
            },
            {
                "id": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 4,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "createdDate": "2020-09-03T03:52:27",
                "message": "good morning"
            },
            {
                "id": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 4,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "createdDate": "2020-09-03T03:51:51",
                "message": "good morning"
            }
        ]

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

### Get All My Discussion [GET /api/discussioncomments/mydiscussion/{discussionId}{?page}]    
Get all my discussion
+ Parameters
    + page - A qury variable

+ Response 200

        [
            {
                "id": 9,
                "discussionId": 157,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 654321,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "message": "good man",
                "createdDate": "2020-09-04T00:34:27"
            },
            {
                "id": 8,
                "discussionId": 157,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 654321,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "message": "good job",
                "createdDate": "2020-09-04T00:34:18"
            }
        ]

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get List Student Discussion Commented [GET /api/discussions/studentlist/discussioncommented/{discussionId}]    
Get List Student Discussion Commented


+ Response 200

        [
            {
                "id": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 654321,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "submit": true
            },
            {
                "id": 1,
                "user": {
                    "id": 29,
                    "name": "user 10",
                    "idNumber": 1,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "submit": false
            },
            {
                "id": 1,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 123456,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                    "createdDate": null,
                    "updateDate": null
                },
                "submit": true
            }
        ]

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Discussion History [GET /api/discussioncomments/history/{userId}/{discussionId}{?page}]    
Get List Student Discussion Commented

+ Parameters
    + page -  A query variable

+ Response 200

        [
            {
                "id": 7,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 123456,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                    "createdDate": null,
                    "updateDate": null
                },
                "message": "how are you",
                "createdDate": "2020-09-04T00:33:49"
            },
            {
                "id": 6,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 123456,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                    "createdDate": null,
                    "updateDate": null
                },
                "message": "hi",
                "createdDate": "2020-09-04T00:33:43"
            }
        ]

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Input Scores Discussion [PUT /api/discussions/inputscore/{discussionId}]    
Input scores discussion

+ Response 200

        {
            "Scores": [
                {
                  "userId": 4,
                  "score": 10
                },
                {
                  "userId": 5,
                  "score": 21
                }
            ]
        }

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Delete Discussions [DELETE /api/discussions/{discussionId}]    
Delete Discussions

+ Response 200

        {
            "code": "DELETE_SUCCESS",
            "message": "Deleted Successfully!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

## Group Materials
### Create Materials [POST /api/classmaterials/create/{classId}] 
Create Materials

+ Request (application/json)

        {
            "week": 5,
            "title": "title",
            "description": "Description",
            "format": "LECTURE_VIDEO",
            "attachedFile": ["http://file1.excel", "http:file2.png"]
        }
        
+ Response 200

        {
            "id": 45,
            "title": "title",
            "description": "Description",
            "classId": 2,
            "week": 5,
            "format": "LECTURE_VIDEO",
            "attachedFile": [
                "http://file1.excel",
                "http:file2.png"
            ],
            "dueDate": "2020-09-11T06:15:33",
            "createdDate": "2020-09-04T06:15:33",
            "updateDate": "2020-09-04T06:15:33"
        }

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Materials [GET /api/classmaterials/detail/{materialId}] 
Get Detail Materials
        
+ Response 200

        {
            "classMaterial": {
                "id": 38,
                "title": "title",
                "description": "Description",
                "classId": 2,
                "week": 5,
                "format": "REFERENCE_MATERIAL",
                "duration": 200,
                "attachedFile": [
                    "http://file1.excel",
                    "http:file2.png"
                ],
                "dueDate": null,
                "createdDate": "2020-08-10T02:07:21",
                "updateDate": "2020-08-10T02:07:21"
            },
            "comments": 0,
            "progress": 123
        }

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Edit Materials [PUT /api/classmaterials/edit/{materialId}] 
Edit Detail Materials
    
+ Request (application/json)

        {
             "week": 5,
            "title": "title",
            "description": "Description",
            "format": "LECTURE_VIDEO",
            "attachedFile": ["http://file1.excel", "http:file2.png"]
        }
        
+ Response 200

        {
            "id": 38,
            "title": "title",
            "description": "Description",
            "classId": 2,
            "week": 5,
            "format": "LECTURE_VIDEO",
            "duration": 200,
            "attachedFile": [
                "http://file1.excel",
                "http:file2.png"
            ],
            "dueDate": "2020-09-11T09:04:41",
            "createdDate": "2020-08-10T02:07:21",
            "updateDate": "2020-09-04T09:04:41"
        }

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Create Materials Commments [POST /api/classmaterialscomments/create/{materialId}] 
Create Materials Commments
    
+ Request (application/json)

        {
            "message": "good morning"
        }
        
+ Response 200

        {
            "id": 1,
            "userId": 4,
            "materialId": 38,
            "message": "good morning",
            "createdDate": "2020-09-04T09:20:01",
            "updateDate": "2020-09-04T09:20:01"
        }

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Materials Commments [GET /api/classmaterialscomments/{materialId}{?page}] 
Get Materials Commments

+ Parameters
    + page - A query variable
        
+ Response 200

        [
            {
                "id": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 654321,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "message": "good morning",
                "createdDate": "2020-09-04T02:20:01"
            },
            {
                "id": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 654321,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "message": "good morning",
                "createdDate": "2020-09-04T02:20:01"
            }
        ]

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Create Materials Submit [POST /api/classmaterialssubmits/create/{materialId}] 
Create Materials submit
    
+ Request (application/json)

        {
             "progress": 50
        }
        
+ Response 200

        {
            "id": 1,
            "materialId": 1,
            "userId": 1,
            "progress": 50,
            "createdDate": "2020-09-05T06:42:17",
            "updateDate": "2020-09-05T06:42:17"
        }

+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Delete Materials [DELETE /api/classmaterials/{materialId}]    
Delete Materials

+ Response 200

        {
            "code": "DELETE_SUCCESS",
            "message": "Deleted Successfully!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
## Group Attendances
### Create Attendance [POST /api/attendances/create/{classId}]    
Create Attendance

+ Request (application/json)

        {
            "week": 5,
            "time": 20,
            "questionId" : 2,
            "answers":[
                {
                    "answer":"abc",
                    "correct": true
                },
                {
                    "answer":"abc",
                    "correct": false
                },
                {
                    "answer":"abc",
                    "correct": false
                },
                {
                    "answer":"abc",
                    "correct": false
                }
            ]
        } 

+ Response 200

        {
            "id": 4,
            "userId": 1,
            "classId": 2,
            "week": 5,
            "time": 20,
            "questionId": 2,
            "answers": [
                {
                    "id": 9,
                    "attendanceId": 4,
                    "answer": "abc",
                    "correct": true
                },
                {
                    "id": 10,
                    "attendanceId": 4,
                    "answer": "abc",
                    "correct": false
                },
                {
                    "id": 11,
                    "attendanceId": 4,
                    "answer": "abc",
                    "correct": false
                },
                {
                    "id": 12,
                    "attendanceId": 4,
                    "answer": "abc",
                    "correct": false
                }
            ],
            "createdDate": "2020-08-07T08:47:49",
            "updateDate": "2020-08-07T08:47:49"
        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

### Create Attendance Submit [POST /api/attendances/create/submit/{attendanceId}]    
Create Attendance Submit

status: ATTENDANCE / ABSENT / LATE

+ Request (application/json)

        {
            "answer": 3,
            "status": "ABSENT"
        }
        
+ Response 200

        {
            "id": 8,
            "attendance": {
                "id": 5,
                "userId": 1,
                "classId": 2,
                "week": 6,
                "time": 20,
                "questionId": 2,
                "answers": "13,14,15,16",
                "createdDate": "2020-08-12T01:55:31",
                "updateDate": "2020-08-12T01:55:31"
            },
            "user": {
                "id": 1,
                "name": "tieulong",
                "idNumber": 1,
                "avatar": ""
            },
            "answer": 3,
            "status": "ABSENT",
            "createdDate": "2020-08-24T04:39:03",
            "updateDate": "2020-08-24T04:39:03"
        }
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Attendance Quiz for Student [GET /api/classesdetail/detail/attendancequiz/{classId}]    
Get detail attendance quiz
+ Response 200

        {
            "id": 1,
            "time": 10,
            "question": {
                "id": 1,
                "question": "What is the color of professor’s coat?",
                "classId": 1,
                "week": 1
            },
            "answers": [
                {
                    "id": 1,
                    "answer": "abc"
                },
                {
                    "id": 2,
                    "answer": "abc"
                },
                {
                    "id": 3,
                    "answer": "abc"
                },
                {
                    "id": 4,
                    "answer": "abc"
                }
            ]
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Check Attendance Quiz For Student [GET /api/classesdetail/check/attendancequiz/{classId}]    
Get detail attendance quiz
- true : attendance not exist
- false : attendance already exist

+ Response 200

        {
            "result": true
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Check Attendance Quiz For Professor [GET /api/classesdetail/staff/check/attendancequiz/{classId}]    
Get detail attendance quiz
- true : attendance not exist
- false : attendance already exist

+ Response 200

        {
            "result": true
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Student List of Attendance Quiz Confirm [GET /api/attendances/studentlist/attendancequizconfirm/{classId}{?type}]    
Get detail student list of attendance quiz confirm

type: NAME / STATUS

+ Parameters
    + type -  A query variable

+ Response 200

        [
            {
                "attendanceId": 1,
                "attendanceSubmitId": 14,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 4,
                    "avatar": ""
                },
                "submit": true
            },
            {
                "attendanceId": 1,
                "attendanceSubmitId": 2,
                "user": {
                    "id": 29,
                    "name": "user 10",
                    "idNumber": 1,
                    "avatar": ""
                },
                "submit": true
            },
            {
                "attendanceId": 1,
                "attendanceSubmitId": 1,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 1,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg"
                },
                "submit": true
            }
        ]
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Attendance Quiz for Staff [GET /api/attendances/detail/staff/attendancequizconfirm/{userId}/{attendanceId}]    
Get evaluate list of attendance quiz
+ Response 200

        {
            "user": {
                "id": 1,
                "name": "Professor 1",
                "idNumber": 1,
                "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                "createdDate": null,
                "updateDate": null
            },
            "quiz": {
                "id": 1,
                "question": "What is the color of professor’s coat?"
            },
            "attendancesSubmit": {
                "id": 1,
                "answer": 3,
                "createdDate": "2020-08-09T20:25:54",
                "status": "ATTENDANCE"
            },
            "answer": {
                "answer": "abc",
                "correct": false
            }
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Post Confirm Attendance Quiz [POST /api/attendances/confirm/attendancequiz/{attendanceSubmitId}]    
Post confirm of attendance quiz

+ Request (application/json)

        {
           "status": "ATTENDANCE"
        }
        
+ Response 200

        {
            "code": "UPDATE_SUCCESS",
            "message": "Request confirmed!"
        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Student List of Attendance Quiz Modify [GET /api/attendances/studentlist/attendancequizmodify/{attendanceId}{?type}]    
Get detail student list of attendance quiz modify

type: NAME / STATUS

+ Parameters
    + type -  A query variable

+ Response 200

        [
            {
                "attendanceId": 1,
                "user": {
                    "id": 4,
                    "name": "Student 1",
                    "idNumber": 4,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "status": "ABSENT"
            },
            {
                "attendanceId": 1,
                "user": {
                    "id": 29,
                    "name": "user 10",
                    "idNumber": 1,
                    "avatar": "",
                    "createdDate": null,
                    "updateDate": null
                },
                "status": "ABSENT"
            },
            {
                "attendanceId": 1,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 1,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                    "createdDate": null,
                    "updateDate": null
                },
                "status": "ATTENDANCE"
            }
        ]
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Attendance Modify [GET /api/attendances/detail/attendancemodification/{userId}/{attendanceId}]    
Get detail attendance modify
+ Response 200

        {
            "attendanceId": 1,
            "week": 1,
            "user": {
                "id": 1,
                "name": "Professor 1",
                "idNumber": 1,
                "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                "createdDate": null,
                "updateDate": null
            },
            "attendanceSubmit": {
                "id": 1,
                "attendanceId": 1,
                "userId": 1,
                "answer": 3,
                "status": "ATTENDANCE",
                "reason": null,
                "createdDate": "2020-08-09T20:25:54",
                "updateDate": "2020-08-26T02:14:15"
            }
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Put Modify Attendance Quiz [PUT /api/attendances/modify/attendancequizsubmit/{userId}/{attendanceId}]    
Get evaluate list of attendance quiz

+ Request (application/json)

        {
               "status": "ATTENDANCE",
                "reason": "I like it"
        }
        
+ Response 200

        {
            "id": 1,
            "attendanceId": 1,
            "userId": 1,
            "answer": 3,
            "status": "ATTENDANCE",
            "reason": "I like it",
            "createdDate": "2020-08-09T20:25:54",
            "updateDate": "2020-09-01T08:54:12"
        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
        
### Delete Attendance [DELETE /api/attendances/{attendanceId}]    
Delete Attendance

+ Response 200

        {
            "code": "DELETE_SUCCESS",
            "message": "Deleted Successfully!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
## Group Lives
### Create Lives [POST /api/Lives/create/{classId}]    
Create Lives

+ Request (application/json)

        {
            "week": 5,
            "title": "title",
            "description": "Description",
            "url" : "https://localhost:44369"
        }
        
+ Response 200

        {
           "id": 2,
            "classId": 2,
            "week": 5,
            "title": "title",
            "description": "Description",
            "url": "https://localhost:44369",
            "createdDate": "2020-08-10T09:37:57",
            "updateDate": "2020-08-10T09:37:57"
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Edit lives [PUT /api/lives/edit/{liveId}]    
Edit lives
+ Request (application/json)

        {
               "week": 5,
               "title": "title",
               "description": "Description",
               "url": "https://localhost:44369"
        }
        
+ Response 200

        {
            "code": "UPDATE_SUCCESS",
            "message": "Request confirmed!"
        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Detail Lives [GET /api/lives/detail/{liveId}]    
Get detail lives
        
+ Response 200

        {
           "lives": {
                "id": 1,
                "classId": 2,
                "week": 5,
                "title": "live 1",
                "description": "Description",
                "url": "https://localhost:44369",
                "createdDate": "2020-08-10T02:37:57",
                "updateDate": "2020-09-05T01:25:19"
            },
            "comments": 1
        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Create Lives Comments [POST /api/livescomments/create/{liveId}]    
Create lives comment
+ Request (application/json)

        {
               
            "message": "hello"
        }
        
+ Response 200

        {
            "id": 1,
            "liveId": 1,
            "userId": 1,
            "message": "hello",
            "createdDate": "2020-09-05T08:38:22",
            "updateDate": "2020-09-05T08:38:22"
        }
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get All Lives Comments [GET /api/livescomments/{liveId}]    
Get all lives comments
        
+ Response 200

        [
            {
                "id": 1,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 123456,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                    "createdDate": null,
                    "updateDate": null
                },
                "message": "hello",
                "createdDate": "2020-09-05T01:38:22"
            },
            {
                "id": 2,
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "idNumber": 123456,
                    "avatar": "http://18.162.141.53/api.supportu/1597386001285_2___1597386001284___13244753_1382109491805277_4936278203817120154_n.jpg",
                    "createdDate": null,
                    "updateDate": null
                },
                "message": "hello",
                "createdDate": "2020-09-05T01:38:22"
            }
        ]
        
+ Response 400 (application/json)

        {
          "code": "BAD_REQUEST_ERROR",
          "message": "Bad Request!"
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Delete Lives [DELETE /api/lives/{liveId}]    
Delete Lives

+ Response 200

        {
            "code": "DELETE_SUCCESS",
            "message": "Deleted Successfully!"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

## Group Settings
### User Settings [POST /api/UserSettings/create]    
Create User Settings

alignment: INCOMINGSCHEDULE / RECENTREGISTRAION / CLASSNAME

+ Request (application/json)

        {
            "notice": true,
            "post": false,
            "comment": false,
            "invitation": true,
            "submitting": false,
            "advisor": true,
            "language": "ENGLISH",
            "alignment": "INCOMINGSCHEDULE"
        }
        
+ Response 200

        {
            "id": 6,
            "userId": 1,
            "notice": true,
            "post": false,
            "comment": false,
            "invitation": true,
            "submitting": false,
            "advisor": true,
            "language": "ENGLISH",
            "alignment": "INCOMINGSCHEDULE",
            "createdDate": "2020-08-13T00:45:05",
            "updateDate": "2020-08-20T06:09:00"
        }
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
### Edit User Settings [PUT /api/usersettings/edit]    
Edit User Settings

alignment: INCOMINGSCHEDULE / RECENTREGISTRAION / CLASSNAME

+ Request (application/json)

        {
            "notice": true,
            "post": true,
            "comment": false,
            "invitation": true,
            "submitting": false,
            "advisor": true,
            "language": "ENGLISH",
            "alignment": "INCOMINGSCHEDULE"
        }
        
+ Response 200

        {
            "id": 3,
            "userId": 1,
            "notice": true,
            "post": true,
            "comment": false,
            "invitation": true,
            "submitting": false,
            "advisor": true,
            "language": "ENGLISH",
            "alignment": "INCOMINGSCHEDULE",
            "createdDate": "2020-08-10T10:03:06",
            "updateDate": "2020-08-10T10:03:06"
        }
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get User Settings [GET /api/usersettings/detail]    
Class Notice Settings

+ Response 200

        {
               "id": 6,
                "userId": 1,
                "notice": true,
                "post": false,
                "comment": false,
                "invitation": true,
                "submitting": false,
                "advisor": true,
                "language": "ENGLISH",
                "alignment": "INCOMINGSCHEDULE",
                "createdDate": "2020-08-13T00:45:05",
                "updateDate": "2020-08-28T01:53:36"
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

### Edit Class Notice Settings [POST /api/usersettings/classnotice]    
Class Notice Settings
+ Request (application/json)

        {
            "ClassNoticeSettings":[
                {
                    "classId": 1,
                    "notice": false
                },
                {
                    "classId": 65,
                    "notice": false
                }
            ]
        }
        
+ Response 200

        {
           [
                {
                    "id": 1,
                    "userId": 1,
                    "classId": 1,
                    "notice": false
                },
                {
                    "id": 2,
                    "userId": 1,
                    "classId": 65,
                    "notice": false
                }
            ]
        }
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Class Notice Settings [GET /api/usersettings/classnotice/detail]    
Class Notice Settings

+ Response 200

        [
            {
                "id": 1,
                "userId": 1,
                "classId": 1,
                "name": "Class name 1",
                "nameEng": "Mathermatic",
                "notice": false
            },
            {
                "id": 2,
                "userId": 1,
                "classId": 65,
                "name": "class name 4",
                "nameEng": "class name english",
                "notice": false
            }
        ]
        
+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }

## Group Semester
### Get Semester Information [GET /api/Semester/status]
Semester Information

+ Response 200

        {
            "currentSemester": {
                "semester": "2020/2",
                "createdDate": "2020-09-08T09:14:19"
            },
            "numberSubject": 3,
            "credits": 610,
            "classes": [
                {
                    "name": "dfgdfg",
                    "nameEnglish": "fgfg",
                    "creadits": 22,
                    "score": 0,
                    "ranked": "F",
                    "totalScore": 100
                },
                {
                    "name": "test real 1",
                    "nameEnglish": "45t",
                    "creadits": 566,
                    "score": 0,
                    "ranked": "F",
                    "totalScore": 100
                },
                {
                    "name": "test real 2",
                    "nameEnglish": "aa",
                    "creadits": 22,
                    "score": 0,
                    "ranked": "F",
                    "totalScore": 100
                }
            ]
        }
     
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
## Group Color
### Edit Color Setting [PUT /api/usercolors/edit/{classId}]
Edit color

+ Request (application/json)

        
        {
            "color": "#EC5D66"
        }

+ Response 200

        {
            "id": 12,
            "classId": 7,
            "userId": 1,
            "color": "#C55A11FF",
            "createdDate": "2020-08-17T06:51:04",
            "updateDate": "2020-08-17T06:51:04"
        }
     
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
## Group Calendar
### Get Detail Calendar Information [GET /api/calendar/detail]
Get detail calendar

+ Response 200

        [
            {
                "id": 1,
                "name": "Class name 1",
                "nameEnglish": "Mathermatic",
                "color": "#FF0000FF",
                "assignments": [
                    {
                        "id": 1,
                        "title": "assignment 3",
                        "dueDate": "2020-09-03T02:31:00",
                        "submit": false
                    }
                ],
                "discussions": [
                    {
                        "id": 157,
                        "title": "discussion 1",
                        "dueDate": "2020-09-29T23:31:36",
                        "submit": true
                    }
                ],
                "quizes": [
                    {
                        "id": 120,
                        "title": "quiz 1",
                        "dueDate": "2020-09-30T02:36:30",
                        "submit": true
                    }
                ],
                "classmaterial": [
                    {
                        "id": 49,
                        "title": "material 2",
                        "dueDate": "2020-09-13T19:52:01",
                        "submit": true
                    }
                ]
            },
            {
                "id": 2,
                "name": "Class name 2",
                "nameEnglish": "Mathermatic",
                "color": "#FF0000FF",
                "assignments": [
                    {
                        "id": 1,
                        "title": "assignment 3",
                        "dueDate": "2020-09-03T02:31:00",
                        "submit": false
                    }
                ],
                "discussions": [
                    {
                        "id": 157,
                        "title": "discussion 1",
                        "dueDate": "2020-09-29T23:31:36",
                        "submit": true
                    }
                ],
                "quizes": [
                    {
                        "id": 120,
                        "title": "quiz 1",
                        "dueDate": "2020-09-30T02:36:30",
                        "submit": true
                    }
                ],
                "classmaterial": [
                    {
                        "id": 49,
                        "title": "material 2",
                        "dueDate": "2020-09-13T19:52:01",
                        "submit": true
                    }
                ]
            }
            
        ]
     
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
## Group Chat
### Create Chat Room [POST /api/chatrooms/create/{classId}]
Create Chat room

+ Request (application/json)

        {
            "name": "HAHAHA",
            "type": "SUB",
            "userIds": [1,2]
        }

+ Response 200

        {
            "id": 13,
            "name": "HAHAHA",
            "userId": 4,
            "classId": 1,
            "type": "SUB",
            "createdDate": "2020-09-10T09:37:37",
            "updateDate": "2020-09-10T09:37:37"
        }
         
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Get List Chat Room [GET /api/chatrooms/]
Get List Chat room


+ Response 200

        [
            {
                "id": 1,
                "name": "Class name 1",
                "nameEnglish": "Mathermatic",
                "color": "#B0CD5E",
                "chatRooms": [
                    {
                        "id": 1,
                        "name": "Class 1 -Main",
                        "userId": 1,
                        "participants": 3,
                        "type": "MAIN"
                    },
                    {
                        "id": 4,
                        "name": "class name",
                        "participants": 0,
                        "type": "SUB"
                    }
                ]
            },
            {
                "id": 2,
                "name": "Class name 2",
                "nameEnglish": "Mathermatic",
                "color": "#B0CD5E",
                "chatRooms": [
                    {
                        "id": 1,
                        "name": "Class 1 -Main",
                        "userId": 1,
                        "participants": 3,
                        "type": "MAIN"
                    },
                    {
                        "id": 4,
                        "name": "class name",
                        "participants": 0,
                        "type": "SUB"
                    }
                ]
            }
        ]
         
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Delete Chat Room [DELETE /api/chatrooms/delete/{roomId}]
Delete Chat room


+ Response 200

        {
            "id": 11,
            "userId": 4,
            "name": "class name",
            "classId": 94,
            "type": "MAIN",
            "createdDate": "2020-09-10T02:28:50",
            "updateDate": "2020-09-10T02:28:50"
        }
         
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Detele The User of Chat Room [POST /api/chatrooms/users/kickout/{roomId}]
Detele The User Of Chat Room

+ Request (application/json)

        {
            "userIds": [1,2]
        }

+ Response 200

        {
            "code": "DELETE_SUCCESS",
            "message": "Deleted Successfully!"
        }
         
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Get Participants Chat Room [GET /api/chatrooms/paricipants/{roomId}]
Get Participants


+ Response 200

        [
            {
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "avatar": "http://18.162.141.53/api.supportu/1600228328252_1___1600228332490___89850474_3399790030037203_7198290554449297408_n.jpg",
                    "idNumber": 1234567
                },
                "active": true
            },
            {
                "user": {
                    "id": 1,
                    "name": "Professor 1",
                    "avatar": "http://18.162.141.53/api.supportu/1600228328252_1___1600228332490___89850474_3399790030037203_7198290554449297408_n.jpg",
                    "idNumber": 1234567
                },
                "active": false
            }
        ]
         
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Invite User Into Chat Room [POST /api/chatrooms/participants/invite/{roomId}]
Invite User Into Chat Room

+ Request (application/json)

        {
            "userIds": [1,2]
        }

+ Response 200

        {
            "code": "DELETE_SUCCESS",
            "message": "Deleted Successfully!"
        }
         
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Post Setting Chat Room [POST /api/chatsettings/create/{roomId}]
Post Setting Chat Room

+ Request (application/json)

        {
            "language": "ENGLISH",
            "type": "ALL "
        }

+ Response 200

        {
            "id": 1,
            "userId": 1,
            "roomId": 45,
            "language": "ENGLISH",
            "type": "ALL ",
            "createdDate": "2020-09-11T09:45:19",
            "updateDate": "2020-09-11T09:45:19"
        }
         
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Get Setting Chat Room [POST /api/chatsettings/detail/{roomId}]
Get Setting Chat Room

+ Response 200

        {
            "id": 1,
            "userId": 1,
            "roomId": 45,
            "language": "ENGLISH",
            "type": "ALL ",
            "createdDate": "2020-09-11T09:45:19",
            "updateDate": "2020-09-11T09:45:19"
        }
         
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }

## Group Notification
### Get All Notifications [GET /api/Notifications/list/{?page,type}]
All Notifications

 - type: ALL / UNREAD

+ Parameters
    + type - A querry variable
    + page - A querry variable

+ Response 200

        [
            {
                "id": 8,
                "classId": 110,
                "name": "Class A",
                "nameEng": "A name",
                "submitId": 0,
                "submitName": "Assignment A",
                "toUserId": 4,
                "eventType": "CLASS_INVITE",
                "title": "",
                "submitType": null,
                "content": "",
                "createdDate": "2020-09-15T00:49:59",
                "updateDate": "2020-09-15T00:49:59"
                "status": "UNREAD"
            },
            {
                "id": 8,
                "classId": 110,
                "name": "Class A",
                "nameEng": "A name",
                "submitId": 0,
                "submitName": "Assignment A",
                "toUserId": 4,
                "eventType": "CLASS_INVITE",
                "title": "",
                "submitType": null,
                "content": "",
                "createdDate": "2020-09-15T00:49:59",
                "updateDate": "2020-09-15T00:49:59"
                "status": "UNREAD"
            }
        ]
     
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Post Notification Read [POST /api/notifications/read/{notificationId}]
Post Notification Read

+ Request (application/json)

        {
           "status": "READ"
        }

+ Response 200

        {
            "id": 4,
            "notificationId": 5,
            "userId": 1,
            "status": "READ",
            "createdDate": "2020-09-15T04:04:50",
            "updateDate": "2020-09-15T04:04:50"
        }
                 
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Delete All Notification Of User [DELETE /api/notifications/deleteall/]
Delete all Notification of User

+ Response 200

        {
            "code":"DELETE_SUCCESS",
            "message":"Delete class successfuly"
        }
                 
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Count All Notifications UnRead [GET /api/notifications/unread/]
Count Notifications UnRead

+ Response 200

        {
            "notificationsUnread": 12
        }
                 
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
## Group Notices
### Get All Notice [GET /api/Notices/{?page}]
All Notice
+ Parameters
    + page - A querry variable

+ Response 200

        [
            {
                "id": 1,
                "title": "title 1",
                "content": "Your answers to the questions will be posted ",
                "createdDate": "2020-09-09T06:26:11",
                "updateDate": "2020-09-09T06:26:14"
            },
            {
                "id": 2,
                "title": "title 1",
                "content": "Your answers to the questions will be posted ",
                "createdDate": "2020-09-09T06:26:11",
                "updateDate": "2020-09-09T06:26:14"
            }
        ]
     
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
## Group Location
### Post User Location [POST /api/userlocations/create]
Create user location

+ Request (application/json)

        {
            "lat": 26,
            "lng": 9.4,
            "address": "sfsfdfjksl",
            "city": "Busan"
        }

+ Response 200

        {
            "id": 1,
            "userId": 1,
            "lat": 26,
            "lng": 9.4,
            "address": "sfsfdfjksl",
            "city": "Busan",
            "createdDate": null,
            "updateDate": "2020-09-18T07:49:13"
        }
                 
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }
        

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
### Get Location Setting [POST /api/locationsettings/time]
Get location setting

+ Response 200

        {
            "id": 1,
            "time": 30,
            "createdDate": "2020-09-18T03:18:16",
            "updateDate": "2020-09-18T03:18:14"
        }
                 
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)


        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }
        
## Group Schools
### Get All Schools [GET /api/schools/{?page}]
Get all universities.
Not need authentication

+ Parameters
    - page - A query variable

+ Response 200 (application/json)

        [
            {
                "id":1,
                "name":"Seoul Technolozy University",
                "createdDate":"2020-07-30T12:32:27",
                "updateDate":"2020-07-30T12:32:27"
            },
            {
                "id":2,
                "name":"Seoul Intenational University",
                "createdDate":"2020-07-30T12:32:27",
                "updateDate":"2020-07-30T12:32:27"
            },
            {
                "id":3,
                "name":"Kangnam University",
                "createdDate":"2020-07-30T12:32:27",
                "updateDate":"2020-07-30T12:32:27"
            }
        ]
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"DB_ERROR",
            "message":"Cannot execute query!",
        }
        
### Get Schools Of User [GET /api/schools/schoolofuser]
Get all universities of user

+ Response 200 (application/json)

        [
           {
                "id": 1,
                "name": "Seoul Technolozy University",
                "createdDate": "2020-06-19T03:29:29",
                "updateDate": "2020-06-19T03:29:34",
                "currentSchool": true
            },
            {
                "id": 2,
                "name": "Seoul Intenational University",
                "createdDate": "2020-06-19T03:30:05",
                "updateDate": "2020-06-19T03:30:09",
                "currentSchool": false
            }
        ]

+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"DB_ERROR",
            "message":"Cannot execute query!",
        }
        
## Group FCM
For push notification

### Update Fcm Token [POST /api/fcm/update]
Send registration id(fcm token) to backend

* Status `200` - Update token success
* Status `400` - Error
* Status `401` - Authentication is required!
* Status `500` - Internal Server Error

+ Request (application/json)
        
        {
            "fcmToken":"Azoskcmvj79kgmnelepekwcjipuy8tfjf"
        }

+ Response 200

        {
            "code":"FCM_TOKEN_UPDATED",
            "message":"Fcm Token Updated!"
        }
     
+ Response 400 (application/json)

        {
            "code":"DATA_ERROR",
            "message":"Data error",
        }

+ Response 401 (application/json)

        {
            "code":"AUTH_REQUIRED",
            "message":"Invalid access token! Authentication is required!"
        }

+ Response 500 (application/json)
        
        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"error message"
        }  

### Push Notification [POST /fcm.googleapis.com/fcm/send]
Data structure for push notification
Have many event to push and receive notification, i define some event, we should additional during working.
Data push and receive in data json :
    "data": {
    
    }
 
![name](https://docs.microsoft.com/en-us/xamarin/android/data-cloud/google-messaging/firebase-cloud-messaging-images/01-server-fcm-app.png)

Sample:
|         Event      |     Message                                                            |                                         
|--------------------|------------------------------------------------------------------------|
|  streaming_request |    You have new request to join your todo/wish                         |  
|     live_start     |    Your todo/wish is start streaming after 10 seconds                  |                                             |
|     matched_d1     |    Your streaming have one day left before start streaming             |
|   follow_streaming |    Your streaming have new follower                                    |
|  streaming_upload  |    New todo/list is uploaded                                           |

+ Response 200 (application/json)

        {
           "evt":"live_start",
           "message":"Your todo/wish is start streaming after 5 seconds",
           "msgData":{
              "orderNo":123,
              "taskType ":"TODO/WISH",
              "title":"Travel make you richer",
              "type":"VR/NORMAL",
              "user":{
                 "userSeq":123,
                 "userName":"Long Bui",
                 "profileImage":"https://cache.desktopnexus.com/thumbseg/2351/2351437-bigthumbnail.jpg"
              }
           }
        }