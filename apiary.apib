FORMAT: 1A
HOST: https://polls.apiblueprint.org/

# SuportU
This is document for SuportU 's REST API. All responses from and to the API will be in JSON format.

#General Request Response
Almost APIs requires a request with application/json content type (except API for upload file, image).

#Authentication
API use JWT to authenticate user. Exactly we used JWT Bearer Authentication.
Almost APIs requires authentication on header with Authorization tag and value formatted:

Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRw319.sSaOosOuPWvTYVL

#Error
We must catch common errors in all API to ensure our application works properly.

        {
            "code":"DB_ERROR",
            "message":"Cannot create new user!"
        }

|         HTTP CODE         |       Error code        |  Error message               |
|---------------------------|-------------------------|------------------------------|
|           401             |     unauthorized        |    Authen fail               |

## Group User
Polls is a simple API allowing consumers to view polls and vote in them.
### Get User Info [GET /api/users/{id}]
Get user infomation.

+ Parameters
    + id - variable that is required
    
+ Response 200 (application/json)

        {
            "id": 1,
            "email": "duclongbuivn@gmail.com",
            "password": "123456",
            "name": "logn",
            "phone": "56465465",
            "gender": "male",
            "hobbies": "Run",
            "create_date": "2020-06-10 09:57:38",
            "update_date": "2020-06-10 09:57:38"
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Cannot execute query!",
        }
        
### SignIn [POST /api/authorization/signin]
User login

+ Request (application/json)

        {
            "email": "duclongbuivn@gmail.com",
            "password": "123456"
        }

+ Response 200 (application/json)

        {
            "user":
            {
                "id": 1,
                "name": "Bui Duc Long",
                "email":"duclongbuivn@gmail.com",
                "password": "123456",
                "phone": "56465465",
                "gender": "male",
                "hobbies": "Run",
                "createdDate": "2020-06-12T04:45:29.1393671Z",
                "updateDate": "null"
            },
            "token": "iofgnojsmopdd[spifjdwfgl;ew;d,sa,;cjkposawekdfj"
        }
        
+ Response 400 (application/json)

        {
            "code":"EMAIL_EXISTED",
            "message":"The email already exist!"
        }

        {  
            "code":"EMAIL_NOT_FOUND_ERROR",
            "message":"Email Not Found!"
        }
        
        {  
            "code":"PASSWORD_WRONG",
            "message":"Password is wrong!"
        }
        
        {  
            "code":"USER_STATUS_INVALID",
            "message":"User Status is invalid!"
        }
        
        {  
            "code":"USER_STATUS_NOT_ACTIVE",
            "message":"User Status is not active!"
        }
        
        {  
            "code":"USER_STATUS_BLOCK",
            "message":"User Status is blocked or terminated!!"
        }
        
+ Response 500 (application/json)

        {
            "code":"INTERNAL_SERVER_ERROR",
            "message":"Database Error or some exceptions on Server!",
        }
        
### SignUp [POST /api/authorization/signup]
User signup

+ Request (application/json)

        {
            "email": "duclongbuivn@gmail.com",
            "password": "123456",
            "name": "logn",
            "phone": "56465465",
            "gender": "male",
            "hobbies": "Run",
        }

+ Response 200 (application/json)

        {
            "user":
            {
                "id": 1,
                "name": "Bui Duc Long",
                "email":"duclongbuivn@gmail.com",
                "password": "123456",
                "phone": "56465465",
                "gender": "male",
                "hobbies": "Run",
                "createdDate": "2020-06-12T04:45:29.1393671Z",
                "updateDate": "null"
            },
            "token": "iofgnojsmopdd[spifjdwfgl;ew;d,sa,;cjkposawekdfj"
        }
        
+ Response 400 (application/json)

        {
            "code":"EMAIL_EXISTED",
            "message":"The email already exist!",
        }
        
         {
            "code":"EMAIL_INVALID",
            "message":"The email is invalid!",
        }
        
+ Response 500 (application/json)

        {
            "code":"DB_ERROR",
            "message":"Cannot execute query!",
        }
        
### Forgot Password [POST /api/authorization/forgotpassword/]
Forgot password.

+ Request (application/json)

        {
            "Name": "duclong",
            "phone": "083243315",
        }
    
+ Response 200 (application/json)

        {
            "code":"PASSWORD_WILL_SENT",
            "message":"Password will be sent to the email registration!"
        }
        
+ Response 401 (application/json)

        
        {
          "code": "PHONENUMBER_NOT_FOUND_ERROR",
          "message": "Phone numeber Not Found!"
        }
        
        {
          "code": "USER_NAME_NOT_FOUND_ERROR",
          "message": "User name Not Found!"
        }
        
+ Response 500 (application/json)

        {
          "code": "INTERNAL_SERVER_ERROR",
          "message": "error message"
        }
        
### Update User Infomation [PUT /api/users]
Update Users infomation.

+ Request (application/json)

        {
            "id": "1",
            "email": "duclongbuivn@gmail.com",
            "password": "123456",
            "name": "logn",
            "phone": "56465465",
            "gender": "male",
            "hobbies": "Run"
        }
    
+ Response 200 (application/json)

        {
          "code": "UPDATE_SUCCESS",
          "message": "Request confirmed!"
        }
        
+ Response 400 (application/json)

        {
            "code": "DB_REQUIRED",
            "message":"Data error"
        }
        
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
        {
          "code": "AUTH_ERROR",
          "message": "Access token is invalid!"
        }
        
### Change Password [POST /api/authorization/changePassword]
Change password of Users.

+ Request (application/json)

        {
            "newpassword": "123456",
            "oldpassword": "654321"
        }
    
+ Response 200 (application/json)

        {
            "code":"PASSWORD_UPDATED",
            "message":"Password updated!",
        }
        
+ Response 400 (application/json)

        {
            "code":"PASSWORD_WRONG",
            "message":"Current password is invalid!",
        }
        
        {
            "code":"PASSWORD_NOT_MATCH",
            "message":"Current password is invalid!",
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"DB_ERROR",
            "message":"Cannot execute query!",
        }  
        
### Check Update Version [POST /api/update/version]
Check update verison, if current version is less than force version update, return true

+ Request (application/json)

        {
            "os": "android",
            "current_version": "1.0.1"
        }
    
+ Response 200 (application/json)

        {
            "update": true,
            "version":"1.0.3",
        }
        
+ Response 400 (application/json)

        {
            "code":"VERSION_WRONG",
            "message":"Can't compare version to check update",
        }
        
+ Response 401 (application/json)

        {
          "code": "AUTH_REQUIRED",
          "message": "Invalid access token! Authentication is required!"
        }
        
+ Response 500 (application/json)

        {
            "code":"DB_ERROR",
            "message":"Cannot execute query!",
        }